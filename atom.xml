<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ruby on Rails Blog]]></title>
  <link href="http://Andrew-Ken.github.com/atom.xml" rel="self"/>
  <link href="http://Andrew-Ken.github.com/"/>
  <updated>2012-11-13T22:27:35-05:00</updated>
  <id>http://Andrew-Ken.github.com/</id>
  <author>
    <name><![CDATA[Ken Lu, Andrew Sheelan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mountain Lion and Homebrew]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2012/11/12/mountain-lion-and-homebrew/"/>
    <updated>2012-11-12T20:42:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2012/11/12/mountain-lion-and-homebrew</id>
    <content type="html"><![CDATA[<p><a href="https://gist.github.com/1860902">SOURCE</a></p>

<p>Get Mountain Lion and Homebrew to Be Happy:</p>

<p>1) Install XCode 4.4 into /Applications</p>

<p>Get it from the App Store.</p>

<p>2) Install Command Line Tools</p>

<p>In XCode&#8217;s Preferences > Downloads you can install command line tools.</p>

<p>3) Let Everyone Know Where XCode Is</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer
</span></code></pre></td></tr></table></div></figure>


<p>4) Install X11</p>

<p>Visit http://xquartz.macosforge.org/trac/wiki and download and install 2.7.2+.</p>

<p>You will need to fix the symlink it makes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ln -s /opt/X11 /usr/X11
</span></code></pre></td></tr></table></div></figure>


<p>5) Reinstall your brews</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew list
</span></code></pre></td></tr></table></div></figure>


<p>Will tell you what you need to check. Try out everything one by one and when one doesn&#8217;t work brew remove it and then reinstall it. If the install doesn&#8217;t work, try brew install it &#8211;use-gcc to prevent llvm from getting in the way.
You might need to install libxml2 and link it manually to make sure you don&#8217;t get the wrong xml2-config if your path:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install libxml2
</span><span class='line'>brew link libxml2
</span><span class='line'>Run brew doctor and fix anything it tells you.
</span></code></pre></td></tr></table></div></figure>


<p>You may also need to symlink gcc for certain ruby gems and other stuff like that:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo ln -s /usr/bin/gcc /usr/bin/gcc-4.2
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GCC command line tools]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2012/11/12/gcc-command-line-tools/"/>
    <updated>2012-11-12T20:29:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2012/11/12/gcc-command-line-tools</id>
    <content type="html"><![CDATA[<p>When the bundling gems fail in Mac OS X, Download the latest GCC standalone file from the link below:</p>

<p><a href="https://github.com/kennethreitz/osx-gcc-installer/downloads">gcc standalone tools</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning regular expressions]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2012/11/12/learning-regular-expressions/"/>
    <updated>2012-11-12T15:54:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2012/11/12/learning-regular-expressions</id>
    <content type="html"><![CDATA[<p>Learning Regular expressions require regular practice. Here are a few ways to practice:</p>

<ol>
<li>rails c</li>
<li><a href="http://rubular.com/">Rubular</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[how to use observer and call back]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2012/11/12/how-to-use-observer-and-call-back/"/>
    <updated>2012-11-12T15:07:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2012/11/12/how-to-use-observer-and-call-back</id>
    <content type="html"><![CDATA[<ul>
<li>Add configuration</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#config/application.rb</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">active_record</span><span class="o">.</span><span class="n">observers</span> <span class="o">=</span> <span class="ss">:order_observer</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Create a Observer Class</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">OrderObserver</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Observer</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">after_update</span><span class="p">(</span><span class="n">order</span><span class="p">)</span>
</span><span class='line'>    <span class="n">order</span><span class="o">.</span><span class="n">update_column</span><span class="p">(</span><span class="s1">&#39;type_state&#39;</span><span class="p">,</span> <span class="s2">&quot;UPDATED&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>or we can use the way to register</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#config/application.rb</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">active_record</span><span class="o">.</span><span class="n">observers</span> <span class="o">=</span> <span class="ss">:notification_observer</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">NotificationObserver</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Observer</span>
</span><span class='line'>  <span class="n">observe</span> <span class="ss">:account</span><span class="p">,</span> <span class="ss">:balance</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">after_update</span><span class="p">(</span><span class="n">order</span><span class="p">)</span>
</span><span class='line'>    <span class="n">order</span><span class="o">.</span><span class="n">update_column</span><span class="p">(</span><span class="s1">&#39;type_state&#39;</span><span class="p">,</span> <span class="s2">&quot;UPDATED&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to proxy a domain to localhost]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2012/11/09/how-to-proxy-a-domain-as-local/"/>
    <updated>2012-11-09T14:29:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2012/11/09/how-to-proxy-a-domain-as-local</id>
    <content type="html"><![CDATA[<ul>
<li>STEP 1:</li>
</ul>


<p>Edit your hosts file by typing:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo vim /etc/hosts
</span></code></pre></td></tr></table></div></figure>


<p>Add the following line to the file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>127.0.0.1 google.com <span class="o">(</span>or whatever other hostname you want proxied<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>STEP 2:</li>
</ul>


<p>Type the following into the command line to (ip foward)set up the server port to 80 in this case it is 3000:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo ipfw add 100 fwd 127.0.0.1,3000 tcp from any to any 80 in
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
