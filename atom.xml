<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Yankist]]></title>
  <link href="http://Andrew-Ken.github.com/atom.xml" rel="self"/>
  <link href="http://Andrew-Ken.github.com/"/>
  <updated>2013-07-10T12:45:06-04:00</updated>
  <id>http://Andrew-Ken.github.com/</id>
  <author>
    <name><![CDATA[Ken Lu, Andrew Sheelan Paliyan]]></name>
    <email><![CDATA[contact_us@yankist.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Entering Rails 4]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2013/07/10/entering-rails-4/"/>
    <updated>2013-07-10T12:03:00-04:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2013/07/10/entering-rails-4</id>
    <content type="html"><![CDATA[<h2>Installing Rails using RVM:</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm get stable && rvm install ruby-2.0.0
</span><span class='line'>
</span><span class='line'>rvm --default use 2.0.0
</span><span class='line'>
</span><span class='line'>gem install rails --version 4.0.0.rc1
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[github and multiple oauth provider]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2013/03/20/github-and-multiple-oauth-provider/"/>
    <updated>2013-03-20T08:01:00-04:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2013/03/20/github-and-multiple-oauth-provider</id>
    <content type="html"><![CDATA[<p>Allowing users to login with multiple authentication providers brings great benefits but also results in some annoying edge cases. For example, what happens when they login with one provider, logout and then login with another? What happens when they try to login with one having already logged in with another?</p>

<p>Typically authentication systems have a User model which handles most of the authentication logic but having multiple logins forces you to correctly separate the concepts of an Identity and a User. An Identity is a particular authentication method which a user has used to identify themselves with your site whilst a User manages data which is directly related to your site itself.</p>

<p>So to start you will want to create both User and Identity models. We will also add some convenience methods for creating identities and users when the OmniAuth callback is invoked:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/models/user.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:identities</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">create_with_omniauth</span><span class="p">(</span><span class="n">info</span><span class="p">)</span>
</span><span class='line'>    <span class="n">create</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="n">info</span><span class="o">[</span><span class="s1">&#39;name&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># app/models/identity.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Identity</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">find_with_omniauth</span><span class="p">(</span><span class="n">auth</span><span class="p">)</span>
</span><span class='line'>    <span class="n">find_by_provider_and_uid</span><span class="p">(</span><span class="n">auth</span><span class="o">[</span><span class="s1">&#39;provider&#39;</span><span class="o">]</span><span class="p">,</span> <span class="n">auth</span><span class="o">[</span><span class="s1">&#39;uid&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">create_with_omniauth</span><span class="p">(</span><span class="n">auth</span><span class="p">)</span>
</span><span class='line'>    <span class="n">create</span><span class="p">(</span><span class="n">uid</span><span class="p">:</span> <span class="n">auth</span><span class="o">[</span><span class="s1">&#39;uid&#39;</span><span class="o">]</span><span class="p">,</span> <span class="n">provider</span><span class="p">:</span> <span class="n">auth</span><span class="o">[</span><span class="s1">&#39;provider&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>So a user can have multiple identities and each identity belongs to a single user.</p>

<p>Next we need to handle logging in and logging out. This is managing session data since a logged in user is simply a person who has some session data confirming that they have been logged in. The OmniAuth callback which a provider will redirect to upon authenticating a user is /auth/:provider/callback so lets setup a route and a controller to handle this. We should also setup some helper methods on our Application Controller for handling the current user:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/routes.rb</span>
</span><span class='line'><span class="no">YourAppName</span><span class="o">::</span><span class="no">Application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">match</span> <span class="s1">&#39;/auth/:provider/callback&#39;</span><span class="p">,</span> <span class="n">to</span><span class="p">:</span> <span class="s1">&#39;sessions#create&#39;</span>
</span><span class='line'>  <span class="n">match</span> <span class="s1">&#39;/logout&#39;</span><span class="p">,</span> <span class="n">to</span><span class="p">:</span> <span class="s1">&#39;sessions#destroy&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#app/controllers/sessions_controller.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">SessionsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>    <span class="c1"># Login the User here</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">destroy</span>
</span><span class='line'>    <span class="c1"># Logout the User here</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#app/controllers/application_controller.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">protect_from_forgery</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">protected</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">current_user</span>
</span><span class='line'>    <span class="vi">@current_user</span> <span class="o">||=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">signed_in?</span>
</span><span class='line'>    <span class="o">!!</span><span class="n">current_user</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">helper_method</span> <span class="ss">:current_user</span><span class="p">,</span> <span class="ss">:signed_in?</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">current_user</span><span class="o">=</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@current_user</span> <span class="o">=</span> <span class="n">user</span>
</span><span class='line'>    <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span class="o">]</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span class="n">nil?</span> <span class="p">?</span> <span class="n">user</span> <span class="p">:</span> <span class="n">user</span><span class="o">.</span><span class="n">id</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now to login, all a user needs to do is go to /auth/provider and they will get redirected to Sessions Controller create method after authenticating. So there are a number of possibilities when they hit this action:</p>

<p>A user has never used your site before. They have no User model and no Identities either.
A user is logged out but they have logged into your site with a provider previously. They are now signing in with the same one again.
Just as above but they are now signing in with a different provider.
A user is logged in with a provider but they try to login with the same provider again.
A user is logged in but they try to login with a different provider.
The first two cases are just like a normal sign in process. The final 3 cases occur because we are allowing multiple providers and they can be tricky to handle.</p>

<p>Firstly, we need to grab authentication data given to us by the provider which is stored in request.env[omniauth.auth]. Then we need to check whether we have an identity which matches this data or create a new one.</p>

<p>How we proceed for here depends on whether the user is already logged in. If they aren&#8217;t logged in then either they are a brand new user (so we treat their request like a registration) or they already have an account (so we treat this like a login request).</p>

<p>If they are logged in then we treat their request like they are trying to link an identity with their account. Either they are trying to link an identity which they have already linked (in which case we should display an error message telling them that) or it is a brand new identity so we go ahead and link it.</p>

<p>So at this point our skeleton create method looks like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>  <span class="n">auth</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">env</span><span class="o">[</span><span class="s1">&#39;omniauth.auth&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="c1"># Find an identity here</span>
</span><span class='line'>  <span class="vi">@identity</span> <span class="o">=</span> <span class="no">Identity</span><span class="o">.</span><span class="n">find_with_omniauth</span><span class="p">(</span><span class="n">auth</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="vi">@identity</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>    <span class="c1"># If no identity was found, create a brand new one here</span>
</span><span class='line'>    <span class="vi">@identity</span> <span class="o">=</span> <span class="no">Identity</span><span class="o">.</span><span class="n">create_with_omniauth</span><span class="p">(</span><span class="n">auth</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">signed_in?</span>
</span><span class='line'>    <span class="k">if</span> <span class="vi">@identity</span><span class="o">.</span><span class="n">user</span> <span class="o">==</span> <span class="n">current_user</span>
</span><span class='line'>      <span class="c1"># User is signed in so they are trying to link an identity with their</span>
</span><span class='line'>      <span class="c1"># account. But we found the identity and the user associated with it </span>
</span><span class='line'>      <span class="c1"># is the current user. So the identity is already associated with </span>
</span><span class='line'>      <span class="c1"># this user. So let&#39;s display an error message.</span>
</span><span class='line'>      <span class="n">redirect_to</span> <span class="n">root_url</span><span class="p">,</span> <span class="n">notice</span><span class="p">:</span> <span class="s2">&quot;Already linked that account!&quot;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="c1"># The identity is not associated with the current_user so lets </span>
</span><span class='line'>      <span class="c1"># associate the identity</span>
</span><span class='line'>      <span class="vi">@identity</span><span class="o">.</span><span class="n">user</span> <span class="o">=</span> <span class="n">current_user</span>
</span><span class='line'>      <span class="vi">@identity</span><span class="o">.</span><span class="n">save</span><span class="p">()</span>
</span><span class='line'>      <span class="n">redirect_to</span> <span class="n">root_url</span><span class="p">,</span> <span class="n">notice</span><span class="p">:</span> <span class="s2">&quot;Successfully linked that account!&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="k">if</span> <span class="vi">@identity</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">present?</span>
</span><span class='line'>      <span class="c1"># The identity we found had a user associated with it so let&#39;s </span>
</span><span class='line'>      <span class="c1"># just log them in here</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">current_user</span> <span class="o">=</span> <span class="vi">@identity</span><span class="o">.</span><span class="n">user</span>
</span><span class='line'>      <span class="n">redirect_to</span> <span class="n">root_url</span><span class="p">,</span> <span class="n">notice</span><span class="p">:</span> <span class="s2">&quot;Signed in!&quot;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="c1"># No user associated with the identity so we need to create a new one</span>
</span><span class='line'>      <span class="n">redirect_to</span> <span class="n">new_user_url</span><span class="p">,</span> <span class="n">notice</span><span class="p">:</span> <span class="s2">&quot;Please finish registering&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>So at this point, there are a couple of further considerations. Firstly on the signed in/identity not associated with user branch, there are two reasons why an identity might not be associated with a user. It could be that the identity is brand new, having never been used to sign in before. However, it could be that it has been used and so is already associated with a different user, although not necessarily a different person. Given that this user knew the login credentials for that identity, I think it is probably sufficiently prudent to assume that they are, in fact, the same person who also created the previous user. However, by simply reassigning the user to which the identity is associated with to the current one, you not only leave a user model potentially dangling with no identities to sign in with but also prevent the user from merging their data from their previous account in with this one. Resolving this will be dependent entirely on how much data, and the nature of that data, you have stored for each user but for sufficiently simple applications, you could at this point check to see if the old user has any identities left and, if not, delete that user. If the person using your site is likely to lose any data from this process then you would either need to make this sufficiently clear to them before proceeding or provide them with a way to migrate that data over (or handle it automatically, if possible).</p>

<p>Secondly, on the not signed in/no user model branch, you may need more registration data from your user than can be provided by your authentication providers. At this point, as I have assumed above, you can redirect them to a new user form and redirect them to this point if they try to access any other part of the app without completing it. Then create the user and log them in again when they have. Otherwise, if no further data is necessary or mandatory, you can go ahead and create a blank user model in the create method and log them straight in.</p>

<p>Finally, a few lose ends. Here is the destroy method for logging users out:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">destroy</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">current_user</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>  <span class="n">redirect_to</span> <span class="n">root_url</span><span class="p">,</span> <span class="n">notice</span><span class="p">:</span> <span class="s2">&quot;Signed out!&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>You&#8217;ll also find that the OmniAuth callback url does not correctly verify the rails authenticity token and so will destroy any session data upon returning, thereby logging your current user out. This will prevent them from associating a new identity with their current account. You can get around this by adding skip_before_filter :verify_authenticity_token, only: :create to your sessions controller but I am unsure of the security implications of this.</p>

<p>You&#8217;ll also need some migrations:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">CreateUsers</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:users</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">CreateIdentities</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">create_table</span> <span class="ss">:identities</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:uid</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:provider</span>
</span><span class='line'>      <span class="n">t</span><span class="o">.</span><span class="n">references</span> <span class="ss">:user</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">add_index</span> <span class="ss">:identities</span><span class="p">,</span> <span class="ss">:user_id</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use view helper at controller]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2013/03/07/use-view-helper-at-controller/"/>
    <updated>2013-03-07T08:42:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2013/03/07/use-view-helper-at-controller</id>
    <content type="html"><![CDATA[<p><a href="http://guides.rubyonrails.org/form_helpers.html">guide</a></p>

<p><a href="http://api.rubyonrails.org/classes/AbstractController/Helpers/ClassMethods.html#method-i-helper">api</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">helper</span> <span class="ss">:foo</span>             <span class="c1"># =&gt; requires &#39;foo_helper&#39; and includes FooHelper</span>
</span><span class='line'><span class="n">helper</span> <span class="s1">&#39;resources/foo&#39;</span>  <span class="c1"># =&gt; requires &#39;resources/foo_helper&#39; and includes Resources::FooHelper</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># One line</span>
</span><span class='line'><span class="n">helper</span> <span class="p">{</span> <span class="k">def</span> <span class="nf">hello</span><span class="p">()</span> <span class="s2">&quot;Hello, world!&quot;</span> <span class="k">end</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Multi-line</span>
</span><span class='line'><span class="n">helper</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">foo</span><span class="p">(</span><span class="n">bar</span><span class="p">)</span>
</span><span class='line'>    <span class="s2">&quot;</span><span class="si">#{</span><span class="n">bar</span><span class="si">}</span><span class="s2"> is the very best&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">helper_method</span> <span class="ss">:current_user</span><span class="p">,</span> <span class="ss">:logged_in?</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">current_user</span>
</span><span class='line'>    <span class="vi">@current_user</span> <span class="o">||=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="n">session</span><span class="o">[</span><span class="ss">:user</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>   <span class="k">def</span> <span class="nf">logged_in?</span>
</span><span class='line'>     <span class="n">current_user</span> <span class="o">!=</span> <span class="kp">nil</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>The answer depends on the Rails version.
Rails >= 3.1</p>

<p>Change the include_all_helpers config to false in any environment where you want to apply the configuration. If you want the config to apply to all environments, change it in application.rb.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">action_controller</span><span class="o">.</span><span class="n">include_all_helpers</span> <span class="o">=</span> <span class="kp">false</span>
</span></code></pre></td></tr></table></div></figure>


<p>When false, it will skip the inclusion.
Rails &lt; 3.1</p>

<p>Delete the following line from ApplicationController</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">helper</span> <span class="ss">:all</span>
</span></code></pre></td></tr></table></div></figure>


<p>In this way each controller will load its own helpers.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails integrate with Google analytics Api]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2013/02/10/rails-integrate-with-google-analytics-api/"/>
    <updated>2013-02-10T08:54:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2013/02/10/rails-integrate-with-google-analytics-api</id>
    <content type="html"><![CDATA[<p>Here is serveral usefull source:</p>

<p><a href="https://github.com/chrisle/gattica">gattica</a></p>

<p><a href="https://github.com/robmckinnon/rugalytics">rugalytics</a></p>

<p><a href="https://www.ruby-toolbox.com/categories/Web_Analytics">ruby toolbox</a></p>

<p><a href="https://developers.google.com/analytics/devguides/reporting/core/v3/">Google api Doc</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Include the gem</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;gattica&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Login</span>
</span><span class='line'><span class="n">ga</span> <span class="o">=</span> <span class="no">Gattica</span><span class="o">.</span><span class="n">new</span><span class="p">({</span>
</span><span class='line'>    <span class="ss">:email</span> <span class="o">=&gt;</span> <span class="s1">&#39;email@gmail.com&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:password</span> <span class="o">=&gt;</span> <span class="s1">&#39;password&#39;</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Get a list of accounts</span>
</span><span class='line'><span class="n">accounts</span> <span class="o">=</span> <span class="n">ga</span><span class="o">.</span><span class="n">accounts</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Choose the first account</span>
</span><span class='line'><span class="n">ga</span><span class="o">.</span><span class="n">profile_id</span> <span class="o">=</span> <span class="n">accounts</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">profile_id</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Get the data</span>
</span><span class='line'><span class="n">data</span> <span class="o">=</span> <span class="n">ga</span><span class="o">.</span><span class="n">get</span><span class="p">({</span>
</span><span class='line'>    <span class="ss">:start_date</span>   <span class="o">=&gt;</span> <span class="s1">&#39;2011-01-01&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:end_date</span>     <span class="o">=&gt;</span> <span class="s1">&#39;2011-04-01&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:dimensions</span>   <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;month&#39;</span><span class="p">,</span> <span class="s1">&#39;year&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:metrics</span>      <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;visits&#39;</span><span class="p">,</span> <span class="s1">&#39;bounces&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Show the data</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">data</span><span class="o">.</span><span class="n">inspect</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1"># Sorting by number of visits in descending order (most visits at the top)</span>
</span><span class='line'><span class="n">data</span> <span class="o">=</span> <span class="n">ga</span><span class="o">.</span><span class="n">get</span><span class="p">({</span>
</span><span class='line'>    <span class="ss">:start_date</span>   <span class="o">=&gt;</span> <span class="s1">&#39;2011-01-01&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:end_date</span>     <span class="o">=&gt;</span> <span class="s1">&#39;2011-04-01&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:dimensions</span>   <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;month&#39;</span><span class="p">,</span> <span class="s1">&#39;year&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:metrics</span>      <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;visits&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:sort</span>         <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;-visits&#39;</span><span class="o">]</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1"># Return visits and bounces for mobile traffic </span>
</span><span class='line'><span class="c1"># (Google&#39;s default user segment gaid::-11)</span>
</span><span class='line'>
</span><span class='line'><span class="n">mobile_traffic</span> <span class="o">=</span> <span class="n">ga</span><span class="o">.</span><span class="n">get</span><span class="p">({</span>
</span><span class='line'>  <span class="ss">:start_date</span>   <span class="o">=&gt;</span> <span class="s1">&#39;2011-01-01&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:end_date</span>     <span class="o">=&gt;</span> <span class="s1">&#39;2011-02-01&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:dimensions</span>   <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;month&#39;</span><span class="p">,</span> <span class="s1">&#39;year&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:metrics</span>      <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;visits&#39;</span><span class="p">,</span> <span class="s1">&#39;bounces&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:segment</span>      <span class="o">=&gt;</span> <span class="s1">&#39;gaid::-11&#39;</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1"># Filter by Firefox users</span>
</span><span class='line'><span class="n">firefox_users</span> <span class="o">=</span> <span class="n">ga</span><span class="o">.</span><span class="n">get</span><span class="p">({</span>
</span><span class='line'>  <span class="ss">:start_date</span>   <span class="o">=&gt;</span> <span class="s1">&#39;2010-01-01&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:end_date</span>     <span class="o">=&gt;</span> <span class="s1">&#39;2011-01-01&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:dimensions</span>   <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;month&#39;</span><span class="p">,</span> <span class="s1">&#39;year&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:metrics</span>      <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;visits&#39;</span><span class="p">,</span> <span class="s1">&#39;bounces&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:filters</span>      <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;browser == Firefox&#39;</span><span class="o">]</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Filter where visits is &gt;= 10000</span>
</span><span class='line'><span class="n">lots_of_visits</span> <span class="o">=</span> <span class="n">ga</span><span class="o">.</span><span class="n">get</span><span class="p">({</span>
</span><span class='line'>  <span class="ss">:start_date</span>   <span class="o">=&gt;</span> <span class="s1">&#39;2010-01-01&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:end_date</span>     <span class="o">=&gt;</span> <span class="s1">&#39;2011-02-01&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:dimensions</span>   <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;month&#39;</span><span class="p">,</span> <span class="s1">&#39;year&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:metrics</span>      <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;visits&#39;</span><span class="p">,</span> <span class="s1">&#39;bounces&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:filters</span>      <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;visits &gt;= 10000&#39;</span><span class="o">]</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1"># Get the top 25 keywords that drove traffic</span>
</span><span class='line'><span class="n">data</span> <span class="o">=</span> <span class="n">ga</span><span class="o">.</span><span class="n">get</span><span class="p">({</span>
</span><span class='line'>  <span class="ss">:start_date</span> <span class="o">=&gt;</span> <span class="s1">&#39;2011-01-01&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:end_date</span> <span class="o">=&gt;</span> <span class="s1">&#39;2011-04-01&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:dimensions</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;keyword&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:metrics</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;visits&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:sort</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;-visits&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">:max_results</span> <span class="o">=&gt;</span> <span class="mi">25</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Output our results</span>
</span><span class='line'><span class="n">data</span><span class="o">.</span><span class="n">points</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">data_point</span><span class="o">|</span>
</span><span class='line'>  <span class="n">kw</span> <span class="o">=</span> <span class="n">data_point</span><span class="o">.</span><span class="n">dimensions</span><span class="o">.</span><span class="n">detect</span> <span class="p">{</span> <span class="o">|</span><span class="n">dim</span><span class="o">|</span> <span class="n">dim</span><span class="o">.</span><span class="n">key</span> <span class="o">==</span> <span class="ss">:keyword</span> <span class="p">}</span><span class="o">.</span><span class="n">value</span>
</span><span class='line'>  <span class="n">visits</span> <span class="o">=</span> <span class="n">data_point</span><span class="o">.</span><span class="n">metrics</span><span class="o">.</span><span class="n">detect</span> <span class="p">{</span> <span class="o">|</span><span class="n">metric</span><span class="o">|</span> <span class="n">metric</span><span class="o">.</span><span class="n">key</span> <span class="o">==</span> <span class="ss">:visits</span> <span class="p">}</span><span class="o">.</span><span class="n">value</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">visits</span><span class="si">}</span><span class="s2"> visits =&gt; &#39;</span><span class="si">#{</span><span class="n">kw</span><span class="si">}</span><span class="s2">&#39;&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># =&gt;</span>
</span><span class='line'><span class="c1">#   19667 visits =&gt; &#39;(not set)&#39;</span>
</span><span class='line'><span class="c1">#   1677 visits =&gt; &#39;keyword 1&#39;</span>
</span><span class='line'><span class="c1">#   178 visits =&gt; &#39;keyword 2&#39;</span>
</span><span class='line'><span class="c1">#   165 visits =&gt; &#39;keyword 3&#39;</span>
</span><span class='line'><span class="c1">#   161 visits =&gt; &#39;keyword 4&#39;</span>
</span><span class='line'><span class="c1">#   112 visits =&gt; &#39;keyword 5&#39;</span>
</span><span class='line'><span class="c1">#   105 visits =&gt; &#39;seo company reviews&#39;</span>
</span><span class='line'><span class="c1">#   ...</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using nano as a editor]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2013/01/14/using-nano-as-a-editor/"/>
    <updated>2013-01-14T10:57:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2013/01/14/using-nano-as-a-editor</id>
    <content type="html"><![CDATA[<p><strong>Installing(if not available) nano for mac/ubuntu</strong></p>

<h2>For Mac:</h2>

<p><a href="http://www.nano-editor.org/download.php">Download Page</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>./configure
</span><span class='line'>make
</span><span class='line'>sudo make install
</span></code></pre></td></tr></table></div></figure>


<h2>For Ubuntu:</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>aptitude install nano
</span></code></pre></td></tr></table></div></figure>


<p><strong>Basic commands</strong></p>

<p>To create or edit a file, use the following command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>nano tmp.html
</span></code></pre></td></tr></table></div></figure>


<p>At the bottom of the screen you should see a bunch of commands.
The caret ^ signifies holding down the control key and typing the letter.</p>

<p>All the list of commands are higlighted as we press ctrl key.</p>

<p>To quit nano, which was the biggest question I had, just use ctrl + X
It prompts to save if you changed the file. press y or n and we&#8217;re done.</p>

<p>Here&#8217;s more from the <a href="http://www.nano-editor.org/docs.php">nano editor org</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript Vs Ruby methods]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2013/01/04/javascript-vs-ruby-methods/"/>
    <updated>2013-01-04T12:23:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2013/01/04/javascript-vs-ruby-methods</id>
    <content type="html"><![CDATA[<p><a href="http://agentcooper.github.com/js-ruby-comparison/">source</a></p>

<table width=100% border="1px" valign='top'>
<tr><th colspan='2'>ARRAYS</th></tr>
<tr><th>Ruby</th><th>Javascript</th></tr>
<tr>
<td valign='top'>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;2&quot;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="s2">&quot;3&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">map!</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_i</span><span class="p">)</span> <span class="c1"># [1, 2, 3]</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">delete_at</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">a</span> <span class="c1"># [1, 3]</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">reverse</span> <span class="c1"># [3, 1]</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">unshift</span><span class="p">(</span><span class="mi">777</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1"># [777, 3, 1]</span>
</span></code></pre></td></tr></table></div></figure>
</td>
<td valign='top'>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;2&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;3&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">a</span> <span class="o">=</span> <span class="nx">a</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span> <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">a</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span> <span class="cm">/* how much */</span><span class="p">);</span>
</span><span class='line'><span class="nx">a</span><span class="p">;</span> <span class="c1">// [1, 3]</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">a</span><span class="p">.</span><span class="nx">reverse</span><span class="p">()</span> <span class="c1">// [3, 1]</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">a</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="mi">777</span><span class="p">);</span> <span class="c1">// 777</span>
</span><span class='line'><span class="nx">a</span><span class="p">;</span> <span class="c1">// [777, 3, 1]</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* or in place: */</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="mi">777</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span> <span class="c1">// [777, 3, 1]</span>
</span></code></pre></td></tr></table></div></figure>
</td>

</tr>
<tr>
<td valign='top'>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="c1"># 1 </span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">all?</span><span class="p">{</span><span class="o">|</span><span class="n">n</span><span class="o">|</span> <span class="n">n</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="p">}</span> <span class="c1"># false</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">any?</span><span class="p">{</span><span class="o">|</span><span class="n">n</span><span class="o">|</span> <span class="n">n</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">}</span> <span class="c1"># true</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">keep_if</span><span class="p">{</span><span class="o">|</span><span class="n">n</span><span class="o">|</span> <span class="n">n</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">}</span> <span class="c1"># [2, 3]</span>
</span></code></pre></td></tr></table></div></figure>

</td>
<td valign='top'>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span> <span class="c1">// 1</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">a</span><span class="p">.</span><span class="nx">every</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">n</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="p">;</span> <span class="p">});</span> <span class="c1">// false</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">a</span><span class="p">.</span><span class="nx">some</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">n</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">;</span> <span class="p">});</span>  <span class="c1">// true</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">n</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">;});</span> <span class="c1">// [2, 3]</span>
</span></code></pre></td></tr></table></div></figure>
</td>
</tr>
<tr>
<td valign='top'>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;aaa  &quot;</span><span class="p">,</span> <span class="s2">&quot;  bbb&quot;</span><span class="p">,</span> <span class="s2">&quot;  ccc  &quot;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:strip</span><span class="p">)</span>
</span><span class='line'><span class="c1"># [&quot;aaa&quot;, &quot;bbb&quot;, &quot;ccc&quot;]</span>
</span></code></pre></td></tr></table></div></figure>
</td>
<td valign='top'>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&quot;aaa  &quot;</span><span class="p">,</span> <span class="s2">&quot;  bbb&quot;</span><span class="p">,</span> <span class="s2">&quot;  ccc  &quot;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="nx">a</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">trim</span><span class="p">();</span> <span class="p">});</span>               <span class="c1">// [&#39;aaa&#39;, &#39;bbb&#39;, &#39;ccc&#39;]</span>
</span><span class='line'><span class="nx">a</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nb">Function</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">call</span><span class="p">,</span> <span class="nb">String</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">trim</span><span class="p">);</span> <span class="c1">// [&#39;aaa&#39;, &#39;bbb&#39;, &#39;ccc&#39;]</span>
</span></code></pre></td></tr></table></div></figure>
</td>
</tr>

<tr>
<td valign='top'>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span>  <span class="c1"># [2, 3, 4]</span>
</span><span class='line'><span class="n">a</span><span class="o">[</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">2</span><span class="o">]</span>        <span class="c1"># [2, 3, 4]</span>
</span></code></pre></td></tr></table></div></figure>

</td>
<td valign='top'>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">);</span> <span class="c1">// [2, 3, 4]</span>
</span></code></pre></td></tr></table></div></figure>

</td>
</tr>

<tr>
<td valign='top'>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">n</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">n</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">n</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

</td>
<td valign='top'>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nx">a</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span> <span class="p">{</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span> <span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

</td>
</tr>

<tr><td colspan=2 style="border-left: 0px;border-right: 0px; background: #EEE"><br><br></td></tr>

<tr><th colspan='2'>STRINGS</th></tr>
<tr><th>Ruby</th><th>Javascript</th></tr>

<tr>
<td valign='top'>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s1">&#39;hello&#39;</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="s1">&#39;e&#39;</span><span class="p">)</span>    <span class="c1"># 1</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s1">&#39;hello&#39;</span><span class="o">.</span><span class="n">rindex</span><span class="p">(</span><span class="s1">&#39;l&#39;</span><span class="p">)</span>   <span class="c1"># 3</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="s1">&#39;hello&#39;</span><span class="o">.</span><span class="n">include?</span> <span class="s1">&#39;lo&#39;</span> <span class="k">then</span> <span class="nb">puts</span> <span class="s1">&#39;found&#39;</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s1">&#39;hello&#39;</span> <span class="o">*</span> <span class="mi">3</span>           <span class="c1"># &#39;hellohellohello&#39;</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s1">&#39;a/b/c&#39;</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)</span>    <span class="c1"># [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</span>
</span></code></pre></td></tr></table></div></figure>

</td>
<td valign='top'>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="s1">&#39;hello&#39;</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;e&#39;</span><span class="p">)</span>             <span class="c1">// 1</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="s1">&#39;hello&#39;</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s1">&#39;l&#39;</span><span class="p">)</span>         <span class="c1">// 3</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">~</span><span class="s1">&#39;hello&#39;</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;lo&#39;</span><span class="p">))</span> <span class="p">{</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;found&#39;</span><span class="p">);</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">(</span><span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="mi">3</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)).</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;hello&#39;</span><span class="p">)</span> <span class="c1">// &#39;hellohellohello&#39;</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="s1">&#39;a/b/c&#39;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)</span>               <span class="c1">// [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</span>
</span></code></pre></td></tr></table></div></figure>

</td>
</tr>

<tr><td colspan=2 style="border-left: 0px;border-right: 0px; background: #EEE"><br><br></td></tr>

<tr><th colspan='2'>HASH</th></tr>
<tr><th>Ruby</th><th>Javascript</th></tr>

<tr>
<td valign='top'>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">h</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'><span class="n">h</span><span class="o">[</span><span class="s1">&#39;a&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'><span class="n">h</span><span class="o">[</span><span class="s1">&#39;b&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="mi">2</span>
</span><span class='line'>
</span><span class='line'><span class="n">h</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">key</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">value</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">h</span><span class="o">.</span><span class="n">keys</span> <span class="c1"># [&#39;a&#39;, &#39;b&#39;]</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">h</span><span class="o">.</span><span class="n">has_key?</span><span class="p">(</span><span class="s1">&#39;c&#39;</span><span class="p">)</span> <span class="c1"># false</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">h</span><span class="o">.</span><span class="n">length</span> <span class="c1"># 2</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">h</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="s2">&quot;b&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

</td>
<td valign='top'>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">h</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'><span class="nx">h</span><span class="p">[</span><span class="s1">&#39;a&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="nx">h</span><span class="p">[</span><span class="s1">&#39;b&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="nx">key</span> <span class="k">in</span> <span class="nx">h</span><span class="p">)</span> <span class="p">{</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">h</span><span class="p">[</span><span class="nx">key</span><span class="p">]);</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span> <span class="c1">// [&#39;a&#39;, &#39;b&#39;]</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">h</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s1">&#39;c&#39;</span><span class="p">)</span> <span class="c1">// false</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">h</span><span class="p">).</span><span class="nx">length</span> <span class="c1">// 2</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">delete</span> <span class="nx">h</span><span class="p">.</span><span class="nx">b</span>
</span></code></pre></td></tr></table></div></figure>

</td>
</tr>

<tr><td colspan=2 style="border-left: 0px;border-right: 0px; background: #EEE"><br><br></td></tr>

<tr><th colspan='2'>FUNCTIONS</th></tr>
<tr><th>Ruby</th><th>Javascript</th></tr>

<tr>
<td valign='top'>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">plus_5</span><span class="p">(</span><span class="n">num</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span> <span class="n">num</span> <span class="o">+</span> <span class="mi">5</span> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">plus_5</span>     <span class="c1"># 5</span>
</span><span class='line'><span class="n">plus_5</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="c1"># 15</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">15</span><span class="o">].</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">k</span><span class="o">|</span> <span class="n">plus_5</span><span class="p">(</span><span class="n">k</span><span class="p">)</span> <span class="p">}</span> <span class="c1"># [10, 15, 20]</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">f</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">args</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>
</td>
<td valign='top'>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">plus_5</span><span class="p">(</span><span class="nx">num</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="p">(</span><span class="nx">num</span> <span class="o">||</span> <span class="mi">0</span><span class="p">)</span> <span class="o">+</span> <span class="mi">5</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">plus_5</span><span class="p">();</span>   <span class="c1">// 5</span>
</span><span class='line'><span class="nx">plus_5</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span> <span class="c1">// 15</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">15</span><span class="p">].</span><span class="nx">map</span><span class="p">(</span><span class="nx">plus_5</span><span class="p">);</span> <span class="c1">// [10, 15, 20]</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">f</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">args</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">args</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
</td>
</tr>


<tr><td colspan=2 style="border-left: 0px;border-right: 0px; background: #EEE"><br><br></td></tr>

<tr><th colspan='2'>CLASSES</th></tr>
<tr><th>Ruby</th><th>Javascript</th></tr>

<tr>
<td valign='top'>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Person</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:firstName</span><span class="p">,</span> <span class="ss">:lastName</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">firstName</span><span class="p">,</span> <span class="n">lastName</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@firstName</span> <span class="o">=</span> <span class="n">firstName</span>
</span><span class='line'>    <span class="vi">@lastName</span> <span class="o">=</span> <span class="n">lastName</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">fullName</span>
</span><span class='line'>    <span class="vi">@firstName</span> <span class="o">+</span> <span class="s2">&quot; &quot;</span> <span class="o">+</span> <span class="vi">@lastName</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">john</span> <span class="o">=</span> <span class="no">Person</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;John&quot;</span><span class="p">,</span> <span class="s2">&quot;Malkovic&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">john</span><span class="o">.</span><span class="n">fullName</span> <span class="c1"># &quot;John Malkovic&quot;</span>
</span></code></pre></td></tr></table></div></figure>

</td>
<td valign='top'>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">Person</span><span class="p">(</span><span class="nx">firstName</span><span class="p">,</span> <span class="nx">lastName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">firstName</span><span class="p">;</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">lastName</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nx">Person</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">fullName</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">+</span> <span class="s2">&quot; &quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">john</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Person</span><span class="p">(</span><span class="s2">&quot;John&quot;</span><span class="p">,</span> <span class="s2">&quot;Malkovic&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nx">john</span><span class="p">.</span><span class="nx">fullName</span><span class="p">();</span> <span class="c1">// &quot;John Malkovic&quot;</span>
</span></code></pre></td></tr></table></div></figure>

</td>
</tr>

<tr><td colspan=2 style="border-left: 0px;border-right: 0px; background: #EEE"><br><br></td></tr>

<tr><th colspan='2'>MATH</th></tr>
<tr><th>Ruby</th><th>Javascript</th></tr>

<tr>
<td valign='top'>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[-</span><span class="mi">5</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">8</span><span class="o">].</span><span class="n">max</span>            <span class="c1"># -1</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[-</span><span class="mi">5</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">20</span><span class="o">].</span><span class="n">reduce</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">&amp;</span><span class="ss">:+</span><span class="p">)</span> <span class="c1"># 30</span>
</span></code></pre></td></tr></table></div></figure>

</td>
<td valign='top'>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="p">[</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">8</span><span class="p">])</span> <span class="c1">// -1</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">[</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">20</span><span class="p">].</span><span class="nx">reduce</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">sum</span><span class="p">,</span> <span class="nx">value</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">sum</span> <span class="o">+</span> <span class="nx">value</span><span class="p">;</span> <span class="p">},</span> <span class="mi">0</span><span class="p">)</span> <span class="c1">// 30</span>
</span></code></pre></td></tr></table></div></figure>

</td>
</tr>

<tr><td colspan=2 style="border-left: 0px;border-right: 0px; background: #EEE"><br><br></td></tr>

<tr><th colspan='2'>MISC..</th></tr>
<tr><th>Ruby</th><th>Javascript</th></tr>

<tr>
<td valign='top'>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">prng</span> <span class="o">=</span> <span class="no">Random</span><span class="o">.</span><span class="n">new</span><span class="p">()</span>
</span><span class='line'><span class="n">prng</span><span class="o">.</span><span class="n">rand</span><span class="p">(</span><span class="mi">5</span><span class="o">.</span><span class="n">.</span><span class="mi">9</span><span class="p">)</span> <span class="c1"># one of [5, 6, 7, 8, 9]</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="n">b</span><span class="p">,</span> <span class="n">a</span> <span class="c1"># switch a and b</span>
</span></code></pre></td></tr></table></div></figure>

</td>
<td valign='top'>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">rand</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="p">(</span><span class="nx">b</span> <span class="o">-</span> <span class="nx">a</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="nx">a</span><span class="p">);</span> <span class="p">}</span>
</span><span class='line'><span class="nx">rand</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">9</span><span class="p">);</span> <span class="c1">// one of [5, 6, 7, 8, 9]</span>
</span></code></pre></td></tr></table></div></figure>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">a</span> <span class="o">=</span> <span class="p">[</span><span class="nx">b</span><span class="p">,</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">a</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>

</td>
</tr>

</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[4 ways to call a ruby method]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2012/12/21/4-ways-to-call-a-ruby-method/"/>
    <updated>2012-12-21T11:43:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2012/12/21/4-ways-to-call-a-ruby-method</id>
    <content type="html"><![CDATA[<p>There is 4 ways to excute ruby method. Two of them can excute private method out of self class.</p>

<p>I’m pretty sure that you have heard lots about ruby, specially as being a dynamic language, you can create methods on the fly, add instance variables, define constants and invoke existing methods dynamically , and that’s what this post is all about :</p>

<p>As you know in ruby you can call a public instance method directly ,ex :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">s</span><span class="o">=</span> <span class="s2">&quot;hi man&quot;</span>
</span><span class='line'><span class="nb">p</span> <span class="n">s</span><span class="o">.</span><span class="n">length</span> <span class="c1">#=&gt; 6</span>
</span><span class='line'><span class="nb">p</span> <span class="n">s</span><span class="o">.</span><span class="n">include?</span> <span class="s2">&quot;hi&quot;</span> <span class="c1">#=&gt; true</span>
</span></code></pre></td></tr></table></div></figure>


<p>One way to invoke a method dynamically in ruby is to send a message to the object :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span> <span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:length</span><span class="p">)</span> <span class="c1">#=&gt; 6</span>
</span><span class='line'><span class="nb">p</span> <span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:include?</span><span class="p">,</span><span class="s2">&quot;hi&quot;</span><span class="p">)</span> <span class="c1">#=&gt; true</span>
</span></code></pre></td></tr></table></div></figure>


<p>A second way is instantiate a method object and then call it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">method_object</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">method</span><span class="p">(</span><span class="ss">:length</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="n">method_object</span><span class="o">.</span><span class="n">call</span> <span class="c1">#=&gt; 6</span>
</span><span class='line'><span class="n">method_object</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">method</span><span class="p">(</span><span class="ss">:include?</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span> <span class="n">method_object</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s1">&#39;hi&#39;</span><span class="p">)</span>  <span class="c1">#=&gt; true</span>
</span></code></pre></td></tr></table></div></figure>


<p>And the third way is to use the eval method:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">eval</span> <span class="s2">&quot;s.length&quot;</span> <span class="c1">#=&gt; 6</span>
</span><span class='line'><span class="nb">eval</span> <span class="s2">&quot;s.include? &#39;hi&#39;&quot;</span> <span class="c1">#=&gt;true</span>
</span></code></pre></td></tr></table></div></figure>


<p>Well, when to use what?</p>

<p>look at this script, it will be used to benchmark the 3 ways of calling :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;benchmark&quot;</span>
</span><span class='line'><span class="nb">test</span> <span class="o">=</span> <span class="s2">&quot;hi man&quot;</span>
</span><span class='line'><span class="n">m</span> <span class="o">=</span> <span class="nb">test</span><span class="o">.</span><span class="n">method</span><span class="p">(</span><span class="ss">:length</span><span class="p">)</span>
</span><span class='line'><span class="n">n</span> <span class="o">=</span> <span class="mi">100000</span>
</span><span class='line'><span class="no">Benchmark</span><span class="o">.</span><span class="n">bmbm</span> <span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class='line'>  <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;call&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="n">n</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="n">m</span><span class="o">.</span><span class="n">call</span> <span class="p">}</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;send&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="n">n</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="nb">test</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:length</span><span class="p">)</span> <span class="p">}</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s2">&quot;eval&quot;</span><span class="p">)</span> <span class="p">{</span> <span class="n">n</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="nb">eval</span> <span class="s2">&quot;test.length&quot;</span> <span class="p">}</span> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">#######################################</span>
</span><span class='line'><span class="c1">#####   The results</span>
</span><span class='line'><span class="c1">#######################################</span>
</span><span class='line'><span class="c1">#Rehearsal ----------------------------------------</span>
</span><span class='line'><span class="c1">#call   0.050000   0.020000   0.070000 (  0.077915)</span>
</span><span class='line'><span class="c1">#send   0.080000   0.000000   0.080000 (  0.086071)</span>
</span><span class='line'><span class="c1">#eval   0.360000   0.040000   0.400000 (  0.405647)</span>
</span><span class='line'><span class="c1">#------------------------------- total: 0.550000sec</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#          user     system      total        real</span>
</span><span class='line'><span class="c1">#call   0.050000   0.020000   0.070000 (  0.072041)</span>
</span><span class='line'><span class="c1">#send   0.070000   0.000000   0.070000 (  0.077674)</span>
</span><span class='line'><span class="c1">#eval   0.370000   0.020000   0.390000 (  0.399442)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Well as you can see, instantiating a method object is the fastest dynamic way in calling a method, also notice how slow using eval is.</p>

<p>Also when sending a message to an object , or when instantiating a method object , u can call private methods of that object <a href="http://khelll.com/blog/ruby/ruby-dynamic-method-calling/">:</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Foo</span>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hi</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;hi man&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Normal method calling</span>
</span><span class='line'><span class="n">f</span> <span class="o">=</span> <span class="no">Foo</span><span class="o">.</span><span class="n">new</span>  <span class="c1">#=&gt; &lt;Foo:0x10a0d51&gt;</span>
</span><span class='line'><span class="n">f</span><span class="o">.</span><span class="n">hi</span>  <span class="c1">#=&gt;NoMethodError: private method `hi&#39; called for #&lt;Foo:0x10a0d51&gt; </span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Sending a message</span>
</span><span class='line'><span class="n">f</span><span class="o">.</span><span class="n">send</span> <span class="ss">:hi</span> <span class="c1">#  hi man</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Instantiating a method object</span>
</span><span class='line'><span class="n">f</span><span class="o">.</span><span class="n">method</span><span class="p">(</span><span class="ss">:hi</span><span class="p">)</span><span class="o">.</span><span class="n">call</span>  <span class="c1"># hi man</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Using eval</span>
</span><span class='line'><span class="nb">eval</span> <span class="s2">&quot;f.hi&quot;</span>  <span class="c1">#=&gt;NoMethodError: private method `hi&#39; called for #&lt;Foo:0x10a0d51&gt; </span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Using instance_eval</span>
</span><span class='line'><span class="n">f</span><span class="o">.</span><span class="n">instance_eval</span> <span class="p">{</span><span class="n">hi</span><span class="p">}</span>  <span class="c1"># hi man</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby timeout]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2012/12/09/ruby-timeout/"/>
    <updated>2012-12-09T06:56:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2012/12/09/ruby-timeout</id>
    <content type="html"><![CDATA[<h2>standard timeout</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;timeout&#39;</span>
</span><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="n">complete_results</span> <span class="o">=</span> <span class="no">Timeout</span><span class="o">.</span><span class="n">timeout</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>   <span class="nb">sleep</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">rescue</span> <span class="no">Timeout</span><span class="o">::</span><span class="no">Error</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s1">&#39;Print me something please&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>sometime, the code inner with begin will catch exception
such as:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;timeout&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2">: Starting&quot;</span>
</span><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="no">Timeout</span><span class="o">.</span><span class="n">timeout</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>    <span class="k">begin</span>
</span><span class='line'>      <span class="nb">sleep</span> <span class="mi">10</span>
</span><span class='line'>    <span class="k">rescue</span> <span class="no">Exception</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2">: Caught an exception: </span><span class="si">#{</span><span class="n">e</span><span class="o">.</span><span class="n">inspect</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="nb">sleep</span> <span class="mi">10</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">rescue</span> <span class="no">Timeout</span><span class="o">::</span><span class="no">Error</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2">: Timeout: </span><span class="si">#{</span><span class="n">e</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2">: Never timed out.&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>so new a thread, as ruby 1.9 thread is native</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="n">complete_results</span> <span class="o">=</span> <span class="no">Timeout</span><span class="o">.</span><span class="n">timeout</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>    <span class="no">Thread</span><span class="o">.</span><span class="n">new</span><span class="p">{</span> <span class="n">results</span> <span class="o">=</span> <span class="n">platform</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">artist</span><span class="p">,</span> <span class="n">album_name</span><span class="p">)</span> <span class="p">}</span><span class="o">.</span><span class="n">value</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">rescue</span> <span class="no">Timeout</span><span class="o">::</span><span class="no">Error</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s1">&#39;Print me something please&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>implementation</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># From lib/timeout.rb</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">timeout</span><span class="p">(</span><span class="n">sec</span><span class="p">,</span> <span class="n">exception</span><span class="o">=</span><span class="no">Error</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="k">yield</span> <span class="k">if</span> <span class="n">sec</span> <span class="o">==</span> <span class="kp">nil</span> <span class="ow">or</span> <span class="n">sec</span><span class="o">.</span><span class="n">zero?</span>
</span><span class='line'>  <span class="k">raise</span> <span class="no">ThreadError</span><span class="p">,</span> <span class="s2">&quot;timeout within critical session&quot;</span> <span class="k">if</span> <span class="no">Thread</span><span class="o">.</span><span class="n">critical</span>
</span><span class='line'>  <span class="k">begin</span>
</span><span class='line'>    <span class="n">x</span> <span class="o">=</span> <span class="no">Thread</span><span class="o">.</span><span class="n">current</span>
</span><span class='line'>    <span class="n">y</span> <span class="o">=</span> <span class="no">Thread</span><span class="o">.</span><span class="n">start</span> <span class="p">{</span>
</span><span class='line'>      <span class="nb">sleep</span> <span class="n">sec</span>
</span><span class='line'>      <span class="n">x</span><span class="o">.</span><span class="n">raise</span> <span class="n">exception</span><span class="p">,</span> <span class="s2">&quot;execution expired&quot;</span> <span class="k">if</span> <span class="n">x</span><span class="o">.</span><span class="n">alive?</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">yield</span> <span class="n">sec</span>
</span><span class='line'>    <span class="c1">#    return true</span>
</span><span class='line'>  <span class="k">ensure</span>
</span><span class='line'>    <span class="n">y</span><span class="o">.</span><span class="n">kill</span> <span class="k">if</span> <span class="n">y</span> <span class="ow">and</span> <span class="n">y</span><span class="o">.</span><span class="n">alive?</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>system timer only for 1.8<a href="http://ph7spot.com/musings/system-timer">.</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rspec test failed after changing to capybara-webkit]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2012/12/09/rspec-test-failed-after-changing-to-capybara-webkit/"/>
    <updated>2012-12-09T06:03:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2012/12/09/rspec-test-failed-after-changing-to-capybara-webkit</id>
    <content type="html"><![CDATA[<h2>problem as</h2>

<p>written some RSpec test for my rails 3.2 application and because I was annyoed by the Browser popping up ich tried to change from firefox to capybara-webkit. After this all tests still run, except one. The line that is failing is:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">expect</span> <span class="p">{</span> <span class="n">click_button</span> <span class="s2">&quot;Create&quot;</span> <span class="p">}</span><span class="o">.</span><span class="n">to</span> <span class="n">change</span><span class="p">(</span><span class="no">Answer</span><span class="p">,</span> <span class="ss">:count</span><span class="p">)</span><span class="o">.</span><span class="n">by</span><span class="p">(</span><span class="n">count</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>solution is easy, The simplest way to resolve this is to wait before checking:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">expect</span> <span class="p">{</span> <span class="n">click_button</span> <span class="s2">&quot;Create&quot;</span><span class="p">;</span> <span class="nb">sleep</span> <span class="mi">2</span> <span class="p">}</span><span class="o">.</span><span class="n">to</span> <span class="n">change</span><span class="p">(</span><span class="no">Answer</span><span class="p">,</span> <span class="ss">:count</span><span class="p">)</span><span class="o">.</span><span class="n">by</span><span class="p">(</span><span class="n">count</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>There is a race condition here between Capybara sending the click action to the server and your test checking the database.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[capybara webkit or selenium or watir to simulate browser behavior]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2012/12/06/capybara-webkit-or-selenium-or-watir-to-simulate-browser-behavior/"/>
    <updated>2012-12-06T15:29:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2012/12/06/capybara-webkit-or-selenium-or-watir-to-simulate-browser-behavior</id>
    <content type="html"><![CDATA[<p>Sometimes we want to simulate browser behavior. The situation can be test or automation script.</p>

<h2>install capybara-webkit</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#capybara-webkit need qt</span>
</span><span class='line'><span class="c1">#ubuntu</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">aptitude</span> <span class="n">install</span> <span class="n">libqt4</span><span class="o">-</span><span class="n">dev</span>
</span></code></pre></td></tr></table></div></figure>


<h2>using capybara dsl</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;capybara&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;capybara/dsl&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">Capybara</span><span class="o">.</span><span class="n">default_driver</span> <span class="o">=</span> <span class="ss">:webkit</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">MyModule</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Capybara</span><span class="o">::</span><span class="no">DSL</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">login!</span>
</span><span class='line'>    <span class="n">within</span><span class="p">(</span><span class="s2">&quot;//form[@id=&#39;session&#39;]&quot;</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">fill_in</span> <span class="s1">&#39;Login&#39;</span><span class="p">,</span> <span class="ss">:with</span> <span class="o">=&gt;</span> <span class="s1">&#39;user@example.com&#39;</span>
</span><span class='line'>      <span class="n">fill_in</span> <span class="s1">&#39;Password&#39;</span><span class="p">,</span> <span class="ss">:with</span> <span class="o">=&gt;</span> <span class="s1">&#39;password&#39;</span>
</span><span class='line'>      <span class="n">fill_in</span><span class="p">(</span><span class="s1">&#39;First Name&#39;</span><span class="p">,</span> <span class="ss">:with</span> <span class="o">=&gt;</span> <span class="s1">&#39;John&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">fill_in</span><span class="p">(</span><span class="s1">&#39;Password&#39;</span><span class="p">,</span> <span class="ss">:with</span> <span class="o">=&gt;</span> <span class="s1">&#39;Seekrit&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">fill_in</span><span class="p">(</span><span class="s1">&#39;Description&#39;</span><span class="p">,</span> <span class="ss">:with</span> <span class="o">=&gt;</span> <span class="s1">&#39;Really Long Text...&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">choose</span><span class="p">(</span><span class="s1">&#39;A Radio Button&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">check</span><span class="p">(</span><span class="s1">&#39;A Checkbox&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">uncheck</span><span class="p">(</span><span class="s1">&#39;A Checkbox&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">attach_file</span><span class="p">(</span><span class="s1">&#39;Image&#39;</span><span class="p">,</span> <span class="s1">&#39;/path/to/image.jpg&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">select</span><span class="p">(</span><span class="s1">&#39;Option&#39;</span><span class="p">,</span> <span class="ss">:from</span> <span class="o">=&gt;</span> <span class="s1">&#39;Select Box&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">click_link</span> <span class="s1">&#39;Sign in&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Debugging</h2>

<p>It can be useful to take a snapshot of the page as it currently is and take a
look at it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">save_and_open_page</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can also retrieve the current state of the DOM as a string using
<tt><a href="http://rubydoc.info/github/jnicklas/capybara/master/Capybara/Session#html-instance_method">page.html</a></tt>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">print</span> <span class="n">page</span><span class="o">.</span><span class="n">html</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is mostly useful for debugging. You should avoid testing against the
contents of <code>page.html</code> and use the more expressive finder methods instead.</p>

<p>Finally, in drivers that support it, you can save a screenshot:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">page</span><span class="o">.</span><span class="n">save_screenshot</span><span class="p">(</span><span class="s1">&#39;screenshot.png&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Calling remote servers</h2>

<p>Normally Capybara expects to be testing an in-process Rack application, but you
can also use it to talk to a web server running anywhere on the internets, by
setting app_host:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Capybara</span><span class="o">.</span><span class="n">current_driver</span> <span class="o">=</span> <span class="ss">:selenium</span>
</span><span class='line'><span class="no">Capybara</span><span class="o">.</span><span class="n">app_host</span> <span class="o">=</span> <span class="s1">&#39;http://www.google.com&#39;</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="n">visit</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Note</strong>: the default driver (<code>:rack_test</code>) does not support running
against a remote server. With drivers that support it, you can also visit any
URL directly:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">visit</span><span class="p">(</span><span class="s1">&#39;http://www.google.com&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>By default Capybara will try to boot a rack application automatically. You
might want to switch off Capybara&#8217;s rack server if you are running against a
remote application:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Capybara</span><span class="o">.</span><span class="n">run_server</span> <span class="o">=</span> <span class="kp">false</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Using the sessions manually</h2>

<p>For ultimate control, you can instantiate and use a
<a href="http://rubydoc.info/github/jnicklas/capybara/master/Capybara/Session">Session</a>
manually.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;capybara&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">session</span> <span class="o">=</span> <span class="no">Capybara</span><span class="o">::</span><span class="no">Session</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:webkit</span><span class="p">,</span> <span class="n">my_rack_app</span><span class="p">)</span>
</span><span class='line'><span class="n">session</span><span class="o">.</span><span class="n">within</span><span class="p">(</span><span class="s2">&quot;//form[@id=&#39;session&#39;]&quot;</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">session</span><span class="o">.</span><span class="n">fill_in</span> <span class="s1">&#39;Login&#39;</span><span class="p">,</span> <span class="ss">:with</span> <span class="o">=&gt;</span> <span class="s1">&#39;user@example.com&#39;</span>
</span><span class='line'>  <span class="n">session</span><span class="o">.</span><span class="n">fill_in</span> <span class="s1">&#39;Password&#39;</span><span class="p">,</span> <span class="ss">:with</span> <span class="o">=&gt;</span> <span class="s1">&#39;password&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">session</span><span class="o">.</span><span class="n">click_link</span> <span class="s1">&#39;Sign in&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>XPath, CSS and selectors</h2>

<p>Capybara does not try to guess what kind of selector you are going to give it,
and will always use CSS by default.  If you want to use XPath, you&#8217;ll need to
do:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">within</span><span class="p">(</span><span class="ss">:xpath</span><span class="p">,</span> <span class="s1">&#39;//ul/li&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="o">.</span><span class="n">.</span><span class="o">.</span> <span class="p">}</span>
</span><span class='line'><span class="n">find</span><span class="p">(</span><span class="ss">:xpath</span><span class="p">,</span> <span class="s1">&#39;//ul/li&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">text</span>
</span><span class='line'><span class="n">find</span><span class="p">(</span><span class="ss">:xpath</span><span class="p">,</span> <span class="s1">&#39;//li[contains(.//a[@href = &quot;#&quot;]/text(), &quot;foo&quot;)]&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">value</span>
</span></code></pre></td></tr></table></div></figure>


<p>Alternatively you can set the default selector to XPath:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Capybara</span><span class="o">.</span><span class="n">default_selector</span> <span class="o">=</span> <span class="ss">:xpath</span>
</span><span class='line'><span class="n">find</span><span class="p">(</span><span class="s1">&#39;//ul/li&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">text</span>
</span></code></pre></td></tr></table></div></figure>


<p>Capybara allows you to add custom selectors, which can be very useful if you
find yourself using the same kinds of selectors very often:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Capybara</span><span class="o">.</span><span class="n">add_selector</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">xpath</span> <span class="p">{</span> <span class="o">|</span><span class="nb">id</span><span class="o">|</span> <span class="no">XPath</span><span class="o">.</span><span class="n">descendant</span><span class="o">[</span><span class="no">XPath</span><span class="o">.</span><span class="n">attr</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span> <span class="o">==</span> <span class="nb">id</span><span class="o">.</span><span class="n">to_s</span><span class="o">]</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Capybara</span><span class="o">.</span><span class="n">add_selector</span><span class="p">(</span><span class="ss">:row</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">xpath</span> <span class="p">{</span> <span class="o">|</span><span class="n">num</span><span class="o">|</span> <span class="s2">&quot;.//tbody/tr[</span><span class="si">#{</span><span class="n">num</span><span class="si">}</span><span class="s2">]&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Capybara</span><span class="o">.</span><span class="n">add_selector</span><span class="p">(</span><span class="ss">:flash_type</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">css</span> <span class="p">{</span> <span class="o">|</span><span class="n">type</span><span class="o">|</span> <span class="s2">&quot;#flash.</span><span class="si">#{</span><span class="n">type</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>The block given to xpath must always return an XPath expression as a String, or
an XPath expression generated through the XPath gem. You can now use these
selectors like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">find</span><span class="p">(</span><span class="ss">:id</span><span class="p">,</span> <span class="s1">&#39;post_123&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">find</span><span class="p">(</span><span class="ss">:row</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="n">find</span><span class="p">(</span><span class="ss">:flash_type</span><span class="p">,</span> <span class="ss">:notice</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can specify an optional match option which will automatically use the
selector if it matches the argument:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Capybara</span><span class="o">.</span><span class="n">add_selector</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">xpath</span> <span class="p">{</span> <span class="o">|</span><span class="nb">id</span><span class="o">|</span> <span class="no">XPath</span><span class="o">.</span><span class="n">descendant</span><span class="o">[</span><span class="no">XPath</span><span class="o">.</span><span class="n">attr</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span> <span class="o">==</span> <span class="nb">id</span><span class="o">.</span><span class="n">to_s</span><span class="o">]</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">match</span> <span class="p">{</span> <span class="o">|</span><span class="n">value</span><span class="o">|</span> <span class="n">value</span><span class="o">.</span><span class="n">is_a?</span><span class="p">(</span><span class="no">Symbol</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now use it like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">find</span><span class="p">(</span><span class="ss">:post_123</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>This :id selector is already built into Capybara by default, so you don&#8217;t
need to add it yourself<a href="https://github.com/jnicklas/capybara">.</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[heroku deploy procedure]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2012/12/02/heroku-deploy-procedure/"/>
    <updated>2012-12-02T09:09:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2012/12/02/heroku-deploy-procedure</id>
    <content type="html"><![CDATA[<p>Just keep record of the procedure to deploy heroku
<strong>install heroku</strong>
heroku gem(deprecated) or <a href="https://toolbelt.heroku.com/">toolbelt</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sudo</span> <span class="n">aptitude</span> <span class="n">install</span> <span class="n">heroku</span><span class="o">-</span><span class="n">toolbelt</span>
</span><span class='line'><span class="c1">#or for ubuntu</span>
</span><span class='line'><span class="n">wget</span> <span class="o">-</span><span class="n">qO</span><span class="o">-</span> <span class="n">https</span><span class="ss">:/</span><span class="o">/</span><span class="n">toolbelt</span><span class="o">.</span><span class="n">heroku</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">install</span><span class="o">-</span><span class="n">ubuntu</span><span class="o">.</span><span class="n">sh</span> <span class="o">|</span> <span class="n">sh</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>login with credentials</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">heroku</span> <span class="n">login</span>
</span><span class='line'><span class="c1">#Enter your Heroku credentials.</span>
</span><span class='line'><span class="c1">#Email: adam@example.com</span>
</span><span class='line'><span class="c1">#Password:</span>
</span><span class='line'><span class="c1">#Could not find an existing public key.</span>
</span><span class='line'><span class="c1">#Would you like to generate one? [Yn]</span>
</span><span class='line'><span class="c1">#Generating new SSH public key.</span>
</span><span class='line'><span class="c1">#Uploading ssh public key /Users/adam/.ssh/id_rsa.pub</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>create app</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">heroku</span> <span class="n">create</span>
</span><span class='line'><span class="n">heroku</span> <span class="n">rename</span>
</span><span class='line'><span class="n">heroku</span> <span class="n">help</span>
</span></code></pre></td></tr></table></div></figure>


<p>add to git and make a commit</p>

<p><strong>push and deploy</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#change Gemfile put sqlite3 to development </span>
</span><span class='line'><span class="c1">#add pg to production</span>
</span><span class='line'><span class="c1">#if you change Gemfile you need to git commit again otherwise heroku will not know</span>
</span><span class='line'><span class="n">git</span> <span class="n">push</span> <span class="n">heroku</span> <span class="n">master</span>
</span></code></pre></td></tr></table></div></figure>


<p>if you got error</p>

<blockquote><p>Permission denied (publickey).
fatal: The remote end hung up unexpectedly</p></blockquote>

<p>try
and reference <a href="https://devcenter.heroku.com/articles/keys#adding_keys_to_heroku">add keys to heroku</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">heroku</span> <span class="n">keys</span><span class="ss">:add</span> <span class="o">~</span><span class="sr">/.ssh/i</span><span class="n">d_rsa</span><span class="o">.</span><span class="n">pub</span>
</span><span class='line'><span class="n">ssh</span><span class="o">-</span><span class="n">keygen</span> <span class="o">-</span><span class="n">t</span> <span class="n">rsa</span> <span class="o">-</span><span class="n">f</span> <span class="n">id_rsa</span>
</span><span class='line'><span class="n">git</span> <span class="nb">clone</span> <span class="n">git</span><span class="vi">@heroku</span><span class="o">.</span><span class="n">com</span><span class="ss">:stark</span><span class="o">-</span><span class="n">dawn</span><span class="o">-</span><span class="mi">1234</span><span class="o">.</span><span class="n">git</span> <span class="o">-</span><span class="n">o</span> <span class="n">heroku</span>
</span><span class='line'><span class="n">heroku</span> <span class="n">keys</span><span class="ss">:clear</span>
</span><span class='line'><span class="n">heroku</span> <span class="n">keys</span><span class="ss">:add</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>migration and open</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">heroku</span> <span class="n">run</span> <span class="n">rake</span> <span class="n">db</span><span class="ss">:migrate</span>
</span><span class='line'><span class="n">heroku</span> <span class="n">run</span> <span class="n">console</span>
</span><span class='line'><span class="n">heroku</span> <span class="n">logs</span>
</span><span class='line'><span class="n">heroku</span> <span class="nb">open</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sudo vs RVMSudo]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2012/12/02/sudo-vs-rvmsudo/"/>
    <updated>2012-12-02T08:42:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2012/12/02/sudo-vs-rvmsudo</id>
    <content type="html"><![CDATA[<p><a href="https://rvm.io">RVM</a> is a great command-line tool which allows you to easily install, manage, and work with multiple ruby environments from interpreters to sets of gems.
This is exactly what makes it special, its easy to <a href="https://rvm.io/rvm/install">install RVM</a> with just a few commands..</p>

<p>Installing RVM:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>curl -L https://get.rvm.io | bash -s stable
</span><span class='line'><span class="nb">source</span> ~/.bashrc
</span></code></pre></td></tr></table></div></figure>


<p>Source is to load bashrc in the same window.
Now just use</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rvm install 1.9.3
</span><span class='line'>rvm use 1.9.3
</span></code></pre></td></tr></table></div></figure>


<p>and it now you can start using ruby version 1.9.3 and switch or add more
versions and install gems in its own version.</p>

<p>In spite of having such features to help the user, everything from there runs only for the logged in user, there may be times where you must run Ruby scripts with RVM as root (or another user) via sudo.</p>

<p>But if you do this after installing rvm:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo ruby script.rb
</span></code></pre></td></tr></table></div></figure>


<p>It would problably not work at all or would be using the system installed
version of ruby(which might be old). Do not forget to check the version of the ruby when you do a
sudo, if it runs!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo ruby -v
</span></code></pre></td></tr></table></div></figure>


<p>sudo always starts a new subshell and runs as root from the current user. That new subshell&#8217;s environment will be completely different, and which means that it does not contain RVM or the other paths.
There is a workaround, where you can manually add the path by finding them.
Not a great idea, but works.</p>

<p>RVM has a solution for running sudo with the environments, the &#8216;rvmsudo&#8217; command. It will pass on any environment variables that RVM set up to get you to the correct Ruby.
This includes the following variables</p>

<ul>
<li>$PATH</li>
<li>$GEM_HOME</li>
<li>$GEM_PATH</li>
<li>$BUNDLE_PATH</li>
</ul>


<p>So to run the same ruby script script.rb, simply use the Ruby you want and run it with rvmsudo.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rvm use 1.9.3
</span><span class='line'>rvmsudo ruby script.rb
</span></code></pre></td></tr></table></div></figure>


<p>As always, running commands as the root user with elevated privileges, needs to be carefully done since they can alter settings and install unwanted features to all users of the system.
[Follow our friendly trusted neighborhood spidey.. With Great power comes Great Responsibility]</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[generate random string in ruby]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2012/11/28/generate-random-string-in-ruby/"/>
    <updated>2012-11-28T22:39:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2012/11/28/generate-random-string-in-ruby</id>
    <content type="html"><![CDATA[<p>Sometimes we need to generate a &#8216;n&#8217; character random string.</p>

<p>Here are a few:</p>

<ul>
<li><strong>Only upper case alphabets [A-Z]</strong></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">value</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'><span class="mi">8</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="n">value</span>  <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="mi">65</span> <span class="o">+</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">25</span><span class="p">))</span><span class="o">.</span><span class="n">chr</span><span class="p">}</span> <span class="o">&gt;&gt;</span><span class="p">}</span>
</span><span class='line'><span class="c1">#or</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="mi">8</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="mi">65</span><span class="o">.</span><span class="n">+</span><span class="p">(</span><span class="nb">rand</span><span class="p">(</span><span class="mi">26</span><span class="p">))</span><span class="o">.</span><span class="n">chr</span><span class="p">}</span><span class="o">.</span><span class="n">join</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="mi">8</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span> <span class="p">(</span><span class="s1">&#39;A&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;Z&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span><span class="o">[</span><span class="nb">rand</span><span class="p">(</span><span class="mi">26</span><span class="p">)</span><span class="o">]</span>  <span class="p">}</span><span class="o">.</span><span class="n">join</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Lower case and upper case [a-zA-Z]</strong></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">value</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'><span class="mi">8</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="n">value</span> <span class="o">&lt;&lt;</span> <span class="p">((</span><span class="nb">rand</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">==</span><span class="mi">1</span><span class="o">?</span><span class="mi">65</span><span class="p">:</span><span class="mi">97</span><span class="p">)</span> <span class="o">+</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">25</span><span class="p">))</span><span class="o">.</span><span class="n">chr</span><span class="p">}</span> <span class="o">&gt;&gt;</span><span class="p">}</span>
</span><span class='line'><span class="c1">#or</span>
</span><span class='line'><span class="n">o</span> <span class="o">=</span>  <span class="o">[</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;z&#39;</span><span class="p">),(</span><span class="s1">&#39;A&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;Z&#39;</span><span class="p">)</span><span class="o">].</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">i</span><span class="o">.</span><span class="n">to_a</span><span class="p">}</span><span class="o">.</span><span class="n">flatten</span>
</span><span class='line'><span class="n">string</span>  <span class="o">=</span>  <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="mi">50</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span> <span class="n">o</span><span class="o">[</span><span class="nb">rand</span><span class="p">(</span><span class="n">o</span><span class="o">.</span><span class="n">length</span><span class="p">)</span><span class="o">]</span>  <span class="p">}</span><span class="o">.</span><span class="n">join</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Using SecureRandom provided by ActiveSupport</strong></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_support/secure_random&#39;</span>
</span><span class='line'><span class="n">random_string</span> <span class="o">=</span> <span class="no">ActiveSupport</span><span class="o">::</span><span class="no">SecureRandom</span><span class="o">.</span><span class="n">hex</span><span class="p">(</span><span class="mi">16</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># outputs: 5b5cd0da3121fc53b4bc84d0c8af2e81</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>SecureRandom also has methods for:</li>
</ul>


<p>base64</p>

<ol>
<li>hex</li>
<li>random_bytes</li>
<li>random_number</li>
</ol>


<p><a href="http://api.rubyonrails.org/v3.0.9/classes/ActiveSupport/SecureRandom.html">see:</a></p>

<ul>
<li><strong>It is also important to avoid Ambiguity</strong></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Generates a random string from a set of easily readable characters</span>
</span><span class='line'><span class="k">def</span> <span class="nf">generate_activation_code</span><span class="p">(</span><span class="n">size</span> <span class="o">=</span> <span class="mi">6</span><span class="p">)</span>
</span><span class='line'>  <span class="n">charset</span> <span class="o">=</span> <span class="sx">%w{ 2 3 4 6 7 9 A C D E F G H J K M N P Q R T V W X Y Z}</span>
</span><span class='line'>  <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">size</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span> <span class="n">charset</span><span class="o">.</span><span class="n">to_a</span><span class="o">[</span><span class="nb">rand</span><span class="p">(</span><span class="n">charset</span><span class="o">.</span><span class="n">size</span><span class="p">)</span><span class="o">]</span> <span class="p">}</span><span class="o">.</span><span class="n">join</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Random URL Friendly Strings</strong></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">rand</span><span class="p">(</span><span class="mi">36</span><span class="o">**</span><span class="n">length</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span><span class="p">(</span><span class="mi">36</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>One more example with SecureRandom</strong></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;securerandom&#39;</span>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">urlsafe_base64</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Creating a Random string with arguments</strong></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">random_string</span><span class="p">(</span><span class="n">length</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'>  <span class="n">chars</span> <span class="o">=</span> <span class="s1">&#39;abcdefghjkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789&#39;</span>
</span><span class='line'>  <span class="n">password</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'>  <span class="n">length</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="n">password</span> <span class="o">&lt;&lt;</span> <span class="n">chars</span><span class="o">[</span><span class="nb">rand</span><span class="p">(</span><span class="n">chars</span><span class="o">.</span><span class="n">size</span><span class="p">)</span><span class="o">]</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">password</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>This example works Only in ruby 1.9</strong></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[*</span><span class="p">(</span><span class="s1">&#39;A&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;Z&#39;</span><span class="p">)</span><span class="o">].</span><span class="n">sample</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span><span class="o">.</span><span class="n">join</span>
</span><span class='line'><span class="c1">#Generate a random 8 letter string (e.g. NVAYXHGR)</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="o">[*</span><span class="p">(</span><span class="s1">&#39;A&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;Z&#39;</span><span class="p">),</span><span class="o">*</span><span class="p">(</span><span class="s1">&#39;0&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;9&#39;</span><span class="p">)</span><span class="o">]-</span><span class="sx">%w(0 1 I O)</span><span class="p">)</span><span class="o">.</span><span class="n">sample</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span><span class="o">.</span><span class="n">join</span>
</span><span class='line'><span class="c1">#Generate a random 8 character string (e.g. 3PH4SWF2), excludes 0/1/I/O. Ruby 1.9</span>
</span><span class='line'><span class="no">ALPHABET</span> <span class="o">=</span> <span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;z&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span>
</span><span class='line'><span class="mi">10</span><span class="o">.</span><span class="n">times</span><span class="o">.</span><span class="n">map</span><span class="p">{</span> <span class="no">ALPHABET</span><span class="o">.</span><span class="n">sample</span> <span class="p">}</span><span class="o">.</span><span class="n">join</span>
</span><span class='line'><span class="mi">10</span><span class="o">.</span><span class="n">times</span><span class="o">.</span><span class="n">inject</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">){</span><span class="o">|</span><span class="n">s</span><span class="o">|</span> <span class="n">s</span> <span class="o">&lt;&lt;</span> <span class="no">ALPHABET</span><span class="o">.</span><span class="n">sample</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Here&#8217;s one using digest sha1</strong></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;sha1&#39;</span>
</span><span class='line'><span class="nb">srand</span>
</span><span class='line'><span class="n">seed</span> <span class="o">=</span> <span class="s2">&quot;--</span><span class="si">#{</span><span class="nb">rand</span><span class="p">(</span><span class="mi">10000</span><span class="p">)</span><span class="si">}</span><span class="s2">--</span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2">--&quot;</span>
</span><span class='line'><span class="no">Digest</span><span class="o">::</span><span class="no">SHA1</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">(</span><span class="n">seed</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">8</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p><strong>Here are more examples to help</strong></p></li>
<li><p>Example 1</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">rand</span><span class="p">(</span><span class="mi">2</span><span class="o">**</span><span class="mi">256</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span><span class="p">(</span><span class="mi">36</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">7</span><span class="o">]</span>
</span><span class='line'><span class="c1">#Add ljust if you are really paranoid about the correct string length:</span>
</span><span class='line'><span class="nb">rand</span><span class="p">(</span><span class="mi">2</span><span class="o">**</span><span class="mi">256</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span><span class="p">(</span><span class="mi">36</span><span class="p">)</span><span class="o">.</span><span class="n">ljust</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="s1">&#39;a&#39;</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">7</span><span class="o">]</span>
</span><span class='line'><span class="n">characters</span> <span class="o">=</span> <span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;z&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span> <span class="o">+</span> <span class="p">(</span><span class="s1">&#39;A&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;Z&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span>
</span><span class='line'><span class="c1"># Prior to 1.9, use .choice, not .sample</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">8</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="n">characters</span><span class="o">.</span><span class="n">sample</span><span class="p">}</span><span class="o">.</span><span class="n">join</span>
</span><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="mi">8</span><span class="p">)</span><span class="o">.</span><span class="n">collect</span> <span class="p">{</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span> <span class="n">value</span>  <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="mi">65</span> <span class="o">+</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">25</span><span class="p">))</span><span class="o">.</span><span class="n">chr</span> <span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Example 2</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">generate_random_string</span><span class="p">(</span><span class="n">length</span><span class="o">=</span><span class="mi">6</span><span class="p">)</span>
</span><span class='line'>  <span class="n">string</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>  <span class="n">chars</span> <span class="o">=</span> <span class="p">(</span><span class="s2">&quot;A&quot;</span><span class="o">.</span><span class="n">.</span><span class="s2">&quot;Z&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span>
</span><span class='line'>  <span class="n">length</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">string</span> <span class="o">&lt;&lt;</span> <span class="n">chars</span><span class="o">[</span><span class="nb">rand</span><span class="p">(</span><span class="n">chars</span><span class="o">.</span><span class="n">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">string</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Example 3</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">chars</span> <span class="o">=</span> <span class="o">[*</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;z&#39;</span><span class="p">),</span><span class="o">*</span><span class="p">(</span><span class="s1">&#39;0&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;9&#39;</span><span class="p">)</span><span class="o">].</span><span class="n">flatten</span>
</span><span class='line'><span class="c1">#Single expression, can be passed as an argument, allows duplicate characters:</span>
</span><span class='line'><span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">len</span><span class="p">)</span> <span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">chars</span><span class="o">.</span><span class="n">sample</span><span class="p">}</span><span class="o">.</span><span class="n">join</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Example 4</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">token</span><span class="p">(</span><span class="n">length</span><span class="o">=</span><span class="mi">16</span><span class="p">)</span>
</span><span class='line'>  <span class="n">chars</span> <span class="o">=</span> <span class="o">[*</span><span class="p">(</span><span class="s1">&#39;A&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;Z&#39;</span><span class="p">),</span> <span class="o">*</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;z&#39;</span><span class="p">),</span> <span class="o">*</span><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">9</span><span class="p">)</span><span class="o">]</span>
</span><span class='line'>  <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.length</span><span class="p">)</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span><span class="n">chars</span><span class="o">.</span><span class="n">sample</span><span class="p">}</span><span class="o">.</span><span class="n">join</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Example 5</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">tap</span> <span class="p">{</span><span class="o">|</span><span class="n">v</span><span class="o">|</span> <span class="mi">4</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="n">v</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;z&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">sample</span><span class="p">}</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Example 6</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">String</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">random</span><span class="p">(</span><span class="n">length</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'>    <span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;z&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">sort_by</span> <span class="p">{</span><span class="nb">rand</span><span class="p">}</span><span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="n">length</span><span class="o">].</span><span class="n">join</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Example 7</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">((</span><span class="s1">&#39;a&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;z&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span> <span class="o">+</span> <span class="p">(</span><span class="s1">&#39;A&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;Z&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span> <span class="o">+</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">9</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span><span class="p">)</span><span class="o">.</span><span class="n">sample</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span><span class="o">.</span><span class="n">join</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="o">[</span><span class="p">(</span><span class="mi">48</span><span class="o">.</span><span class="n">.</span><span class="mi">57</span><span class="p">),(</span><span class="mi">65</span><span class="o">.</span><span class="n">.</span><span class="mi">90</span><span class="p">),(</span><span class="mi">97</span><span class="o">.</span><span class="n">.</span><span class="mi">122</span><span class="p">)</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">sample</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span><span class="o">.</span><span class="n">collect</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span><span class="n">x</span><span class="o">.</span><span class="n">chr</span><span class="p">}</span><span class="s2">&quot;&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Example 8</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">secure_random_string</span><span class="p">(</span><span class="n">length</span> <span class="o">=</span> <span class="mi">32</span><span class="p">,</span> <span class="n">non_ambiguous</span> <span class="o">=</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'>  <span class="n">characters</span> <span class="o">=</span> <span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;z&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span> <span class="o">+</span> <span class="p">(</span><span class="s1">&#39;A&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;Z&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span> <span class="o">+</span> <span class="p">(</span><span class="s1">&#39;0&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;9&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span>
</span><span class='line'>
</span><span class='line'>  <span class="sx">%w{I O l 0 1}</span><span class="o">.</span><span class="n">each</span><span class="p">{</span> <span class="o">|</span><span class="n">ambiguous_character</span><span class="o">|</span>
</span><span class='line'>    <span class="n">characters</span><span class="o">.</span><span class="n">delete</span> <span class="n">ambiguous_character</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">if</span> <span class="n">non_ambiguous</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">length</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span>
</span><span class='line'>    <span class="n">characters</span><span class="o">[</span><span class="no">ActiveSupport</span><span class="o">::</span><span class="no">SecureRandom</span><span class="o">.</span><span class="n">random_number</span><span class="p">(</span><span class="n">characters</span><span class="o">.</span><span class="n">size</span><span class="p">)</span><span class="o">]</span>
</span><span class='line'>  <span class="p">}</span><span class="o">.</span><span class="n">join</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Example 9</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">SecureRandom</span><span class="o">.</span><span class="n">base64</span><span class="p">(</span><span class="mi">15</span><span class="p">)</span><span class="o">.</span><span class="n">tr</span><span class="p">(</span><span class="s1">&#39;+/=lIO0&#39;</span><span class="p">,</span> <span class="s1">&#39;pqrsxyz&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c1"># ruby 1.8 and unix</span>
</span><span class='line'><span class="n">random_string</span> <span class="o">=</span> <span class="sb">`openssl rand -base64 24`</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://stackoverflow.com/questions/88311/how-best-to-generate-a-random-string-in-ruby">.</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[generate random number in ruby]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2012/11/28/generate-random-number-in-ruby/"/>
    <updated>2012-11-28T22:27:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2012/11/28/generate-random-number-in-ruby</id>
    <content type="html"><![CDATA[<p>Sometimes we would also need to generate x random numbers from n to m</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">x</span><span class="o">.</span><span class="n">times</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="n">n</span> <span class="o">+</span> <span class="no">Random</span><span class="o">.</span><span class="n">rand</span><span class="p">(</span> <span class="n">m</span> <span class="o">-</span> <span class="n">n</span> <span class="p">)}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Random</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">rand</span><span class="p">(</span><span class="n">n</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">m</span><span class="p">)</span>
</span><span class='line'><span class="c1">#in ruby 1.9.3</span>
</span><span class='line'><span class="no">Random</span><span class="o">.</span><span class="n">rand</span><span class="p">(</span><span class="n">n</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">m</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>if you only want to select a random item form array<a href="http://stackoverflow.com/questions/198460/how-to-get-a-random-number-in-ruby">.</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sx">%(a b c d e)</span><span class="o">.</span><span class="n">sample</span>
</span><span class='line'><span class="p">(</span><span class="n">n</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">m</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">sample</span>
</span></code></pre></td></tr></table></div></figure>


<p>Some other ways by using SecureRandom</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;securerandom&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">random_number</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span> <span class="c1">#=&gt; 15</span>
</span><span class='line'><span class="nb">p</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">random_number</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span> <span class="c1">#=&gt; 88</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">random_number</span> <span class="c1">#=&gt; 0.596506046187744</span>
</span><span class='line'><span class="nb">p</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">random_number</span> <span class="c1">#=&gt; 0.350621695741409</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="no">SecureRandom</span><span class="o">.</span><span class="n">hex</span> <span class="c1">#=&gt; &quot;eb693ec8252cd630102fd0d0fb7c3485&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing rvm on a Mac - Issues With gcc]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2012/11/28/install-rvm-at-mac-with-gcc-problem/"/>
    <updated>2012-11-28T08:45:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2012/11/28/install-rvm-at-mac-with-gcc-problem</id>
    <content type="html"><![CDATA[<p>While installing RVM on a mac, one of the major problems we face are due to missing Xcode. We usually get the error below:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rvm install 1.9.3
</span><span class='line'>Installing Ruby from <span class="nb">source </span>to: /Users/jamie/.rvm/rubies/ruby-1.9.3-p0, this may take a <span class="k">while </span>depending on your cpu<span class="o">(</span>s<span class="o">)</span>...
</span><span class='line'>
</span><span class='line'>ruby-1.9.3-p0 - <span class="c">#fetching </span>
</span><span class='line'>ruby-1.9.3-p0 - <span class="c">#extracted to /Users/jamie/.rvm/src/ruby-1.9.3-p0 (already extracted)</span>
</span><span class='line'>Fetching yaml-0.1.4.tar.gz to /Users/jamie/.rvm/archives
</span><span class='line'>Extracting yaml-0.1.4.tar.gz to /Users/jamie/.rvm/src
</span><span class='line'>Configuring yaml in /Users/jamie/.rvm/src/yaml-0.1.4.
</span><span class='line'>Compiling yaml in /Users/jamie/.rvm/src/yaml-0.1.4.
</span><span class='line'>Installing yaml to /Users/jamie/.rvm/usr
</span><span class='line'>ruby-1.9.3-p0 - <span class="c">#configuring </span>
</span><span class='line'>ERROR: Error running <span class="s1">&#39; ./configure --prefix=/Users/jamie/.rvm/rubies/ruby-1.9.3-p0 --enable-shared --disable-install-doc --with-libyaml-dir=/Users/jamie/.rvm/usr &#39;</span>, please <span class="nb">read</span> /Users/jamie/.rvm/log/ruby-1.9.3-p0/configure.log
</span><span class='line'>ERROR: There has been an error <span class="k">while </span>running configure. Halting the installation.
</span></code></pre></td></tr></table></div></figure>


<p>The Error message also looks like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rvm install 1.9.3
</span><span class='line'>ERROR: The autodetected CC<span class="o">(</span>/usr/bin/gcc-4.2<span class="o">)</span> is LLVM based, it is not yet fully supported by ruby and gems, please <span class="nb">read</span> <span class="sb">`</span>rvm requirements<span class="sb">`</span>, and <span class="nb">set </span><span class="nv">CC</span><span class="o">=</span>/path/to/gcc .
</span></code></pre></td></tr></table></div></figure>


<p>Find the GCC installed in Mac:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>gcc -v
</span><span class='line'>Using built-in specs.
</span><span class='line'>Target: i686-apple-darwin11
</span><span class='line'>Configured with: /private/var/tmp/llvmgcc42/llvmgcc42-2336.1~1/src/configure --disable-checking --enable-werror --prefix<span class="o">=</span>/Developer/usr/llvm-gcc-4.2 --mandir<span class="o">=</span>/share/man --enable-languages<span class="o">=</span>c,objc,c++,obj-c++ --program-prefix<span class="o">=</span>llvm- --program-transform-name<span class="o">=</span>/^<span class="o">[</span>cg<span class="o">][</span>^.-<span class="o">]</span>*<span class="nv">$/</span>s/<span class="nv">$/</span>-4.2/ --with-slibdir<span class="o">=</span>/usr/lib --build<span class="o">=</span>i686-apple-darwin11 --enable-llvm<span class="o">=</span>/private/var/tmp/llvmgcc42/llvmgcc42-2336.1~1/dst-llvmCore/Developer/usr/local --program-prefix<span class="o">=</span>i686-apple-darwin11- --host<span class="o">=</span>x86_64-apple-darwin11 --target<span class="o">=</span>i686-apple-darwin11 --with-gxx-include-dir<span class="o">=</span>/usr/include/c++/4.2.1
</span><span class='line'>Thread model: posix
</span><span class='line'>gcc version 4.2.1 <span class="o">(</span>Based on Apple Inc. build 5658<span class="o">)</span> <span class="o">(</span>LLVM build 2336.1.00<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>also look for the files in user/bin</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ls /usr/bin | grep gcc
</span><span class='line'>gcc
</span><span class='line'>i686-apple-darwin11-llvm-gcc-4.2
</span><span class='line'>llvm-gcc
</span><span class='line'>llvm-gcc-4.2
</span></code></pre></td></tr></table></div></figure>


<p>Here are a few ways to resolve this - read them all to get a better understanding of ways to fix issues like these:</p>

<ul>
<li>Install with clang</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rvm install 1.9.3 --with-gcc<span class="o">=</span>clang
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Install a lighter version of gcc osx-gcc</li>
</ul>


<p><a href="https://github.com/kennethreitz/osx-gcc-installer/downloads">LLVM GCC</a></p>

<p>Be carefull about this, sometimes there are conflicts with Brew</p>

<ul>
<li><p>The best of them all could still be to use the <a href="https://developer.apple.com/downloads/index.action">command line tools for xcode</a></p></li>
<li><p>If you face issues with readline, its best to pkg install readline</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rvm pkg install readline
</span><span class='line'>rvm install 1.9.3 --with-gcc<span class="o">=</span>clang --with-readline-dir<span class="o">=</span><span class="nv">$rvm_path</span>/usr
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>(xcode 4.5) install RVM on Mac OSX 10.8 (Mountain Lion) with Xcode 4.5 <a href="https://gist.github.com/3789921">without installing Command Line Tools</a></li>
</ul>


<p><a href="http://stackoverflow.com/questions/8032824/cant-install-ruby-under-lion-with-rvm-gcc-issues">.</a></p>

<p>Any questions on this, please feel free to ask. We’re here to help…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Passing Command Line Arguments to Rake Tasks]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2012/11/28/pass-command-line-arguments-to-a-rake-task/"/>
    <updated>2012-11-28T08:02:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2012/11/28/pass-command-line-arguments-to-a-rake-task</id>
    <content type="html"><![CDATA[<p>Sometimes, we need to rake tasks that inserts a paticular user entered value into multiple databases.</p>

<p>We&#8217;d like to be able to pass this value into the rake task from the command line, or from another rake task, how can We do this?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rake&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">task</span> <span class="ss">:my_task</span><span class="p">,</span> <span class="ss">:arg1</span><span class="p">,</span> <span class="ss">:arg2</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="p">,</span> <span class="n">args</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Args were: </span><span class="si">#{</span><span class="n">args</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can invoke it by using the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">task</span> <span class="ss">:invoke_my_task</span> <span class="k">do</span>
</span><span class='line'>  <span class="no">Rake</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">invoke_task</span><span class="p">(</span><span class="s2">&quot;my_task[1, 2]&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>or if you prefer this syntax&#8230;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">task</span> <span class="ss">:invoke_my_task_2</span> <span class="k">do</span>
</span><span class='line'>  <span class="no">Rake</span><span class="o">::</span><span class="no">Task</span><span class="o">[</span><span class="ss">:my_task</span><span class="o">].</span><span class="n">invoke</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>A task with prerequisites passes its arguments to it prerequisites(tasks)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">task</span> <span class="ss">:with_prerequisite</span><span class="p">,</span> <span class="ss">:arg1</span><span class="p">,</span> <span class="ss">:arg2</span><span class="p">,</span> <span class="ss">:needs</span> <span class="o">=&gt;</span> <span class="ss">:my_task</span>
</span></code></pre></td></tr></table></div></figure>


<p>or just a&#8230;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">task</span> <span class="ss">:with_prerequisite</span><span class="p">,</span> <span class="o">[</span><span class="ss">:arg1</span><span class="p">,</span> <span class="ss">:arg2</span><span class="o">]</span> <span class="o">=&gt;</span> <span class="ss">:my_task</span>
</span></code></pre></td></tr></table></div></figure>


<p>To specify default values, we take advantage of args being a Rake::TaskArguments object</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">task</span> <span class="ss">:with_defaults</span><span class="p">,</span> <span class="ss">:arg1</span><span class="p">,</span> <span class="ss">:arg2</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="p">,</span> <span class="n">args</span><span class="o">|</span>
</span><span class='line'>  <span class="n">args</span><span class="o">.</span><span class="n">with_defaults</span><span class="p">(</span><span class="ss">:arg1</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span> <span class="ss">:arg2</span> <span class="o">=&gt;</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Args with defaults were: </span><span class="si">#{</span><span class="n">args</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here are a few usages:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&gt; rake my_task<span class="o">[</span>1,2<span class="o">]</span>
</span><span class='line'>Args were: <span class="o">{</span>:arg1<span class="o">=</span>&gt;<span class="s2">&quot;1&quot;</span>, :arg2<span class="o">=</span>&gt;<span class="s2">&quot;2&quot;</span><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>&gt; rake <span class="s2">&quot;my_task[1, 2]&quot;</span>
</span><span class='line'>Args were: <span class="o">{</span>:arg1<span class="o">=</span>&gt;<span class="s2">&quot;1&quot;</span>, :arg2<span class="o">=</span>&gt;<span class="s2">&quot;2&quot;</span><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>&gt; rake invoke_my_task
</span><span class='line'>Args were: <span class="o">{</span>:arg1<span class="o">=</span>&gt;<span class="s2">&quot;1&quot;</span>, :arg2<span class="o">=</span>&gt;<span class="s2">&quot;2&quot;</span><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>&gt; rake invoke_my_task_2
</span><span class='line'>Args were: <span class="o">{</span>:arg1<span class="o">=</span>&gt;3, :arg2<span class="o">=</span>&gt;4<span class="o">}</span>
</span><span class='line'>
</span><span class='line'>&gt; rake with_prerequisite<span class="o">[</span>5,6<span class="o">]</span>
</span><span class='line'>Args were: <span class="o">{</span>:arg1<span class="o">=</span>&gt;<span class="s2">&quot;5&quot;</span>, :arg2<span class="o">=</span>&gt;<span class="s2">&quot;6&quot;</span><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>&gt; rake with_prerequisite_2<span class="o">[</span>7,8<span class="o">]</span>
</span><span class='line'>Args were: <span class="o">{</span>:arg1<span class="o">=</span>&gt;<span class="s2">&quot;7&quot;</span>, :arg2<span class="o">=</span>&gt;<span class="s2">&quot;8&quot;</span><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>&gt; rake with_defaults
</span><span class='line'>Args with defaults were: <span class="o">{</span>:arg1<span class="o">=</span>&gt;:default_1, :arg2<span class="o">=</span>&gt;:default_2<span class="o">}</span>
</span><span class='line'>
</span><span class='line'>&gt; rake with_defaults<span class="o">[</span><span class="s1">&#39;x&#39;</span>,<span class="s1">&#39;y&#39;</span><span class="o">]</span>
</span><span class='line'>Args with defaults were: <span class="o">{</span>:arg1<span class="o">=</span>&gt;<span class="s2">&quot;x&quot;</span>, :arg2<span class="o">=</span>&gt;<span class="s2">&quot;y&quot;</span><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://rake.rubyforge.org/files/doc/rakefile_rdoc.html">For more information&#8230;</a></p>

<p><a href="http://stackoverflow.com/questions/825748/how-do-i-pass-command-line-arguments-to-a-rake-task">.</a></p>

<p>Any questions on this, please feel free to ask. We’re here to help…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using NET to Post API Calls With or Without Secure Connections]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2012/11/28/using-net-to-post/"/>
    <updated>2012-11-28T06:45:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2012/11/28/using-net-to-post</id>
    <content type="html"><![CDATA[<p>Using Net module is the best and the eaiest ways to post data or make api calls
to urls. Here&#8217;s an example</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">post_using_net</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">params</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>  <span class="n">uri</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class='line'>  <span class="n">http</span> <span class="o">=</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTP</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">uri</span><span class="o">.</span><span class="n">host</span><span class="p">,</span> <span class="n">uri</span><span class="o">.</span><span class="n">port</span><span class="p">)</span>
</span><span class='line'>  <span class="n">http</span><span class="o">.</span><span class="n">use_ssl</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">http</span><span class="o">.</span><span class="n">verify_mode</span> <span class="o">=</span> <span class="no">OpenSSL</span><span class="o">::</span><span class="no">SSL</span><span class="o">::</span><span class="no">VERIFY_NONE</span>
</span><span class='line'>  <span class="n">response</span> <span class="o">=</span> <span class="n">http</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">uri</span><span class="o">.</span><span class="n">request_uri</span><span class="p">,</span> <span class="n">params</span><span class="o">.</span><span class="n">to_query</span><span class="p">)</span>
</span><span class='line'>  <span class="n">response</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>for connections that does not use ssl i.e (https) the following can be removed</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">http</span><span class="o">.</span><span class="n">use_ssl</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">http</span><span class="o">.</span><span class="n">verify_mode</span> <span class="o">=</span> <span class="no">OpenSSL</span><span class="o">::</span><span class="no">SSL</span><span class="o">::</span><span class="no">VERIFY_NONE</span>
</span></code></pre></td></tr></table></div></figure>


<p>Net also handles get, put and delete, to make it work for muliple requests,
just use a send to make calls to the methods</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">send_using_net</span><span class="p">(</span><span class="nb">method</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">params</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>  <span class="n">uri</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class='line'>  <span class="n">http</span> <span class="o">=</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTP</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">uri</span><span class="o">.</span><span class="n">host</span><span class="p">,</span> <span class="n">uri</span><span class="o">.</span><span class="n">port</span><span class="p">)</span>
</span><span class='line'>  <span class="n">http</span><span class="o">.</span><span class="n">use_ssl</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">http</span><span class="o">.</span><span class="n">verify_mode</span> <span class="o">=</span> <span class="no">OpenSSL</span><span class="o">::</span><span class="no">SSL</span><span class="o">::</span><span class="no">VERIFY_NONE</span>
</span><span class='line'>  <span class="n">response</span> <span class="o">=</span> <span class="n">http</span><span class="o">.</span><span class="n">send</span> <span class="nb">method</span><span class="p">,</span> <span class="o">[</span><span class="n">uri</span><span class="o">.</span><span class="n">request_uri</span><span class="p">,</span> <span class="n">params</span><span class="o">.</span><span class="n">to_query</span><span class="o">]</span>
</span><span class='line'>  <span class="n">response</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Any questions on this, please feel free to ask. We&#8217;re here to help&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Timestamps strftime vs strptime]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2012/11/28/timestamps-strftime-vs-strptime/"/>
    <updated>2012-11-28T06:20:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2012/11/28/timestamps-strftime-vs-strptime</id>
    <content type="html"><![CDATA[<h3>strftime</h3>

<p>Formats date according to the directives in the given format string. The directives begins with a percent (%) character. Any text not listed as a directive will be passed through to the output string.</p>

<p><a href="http://apidock.com/ruby/DateTime/strftime">source link</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%FT%T%:z&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#  %F - The ISO 8601 date format (%Y-%m-%d)</span>
</span><span class='line'><span class="c1">#  %T - 24-hour time (%H:%M:%S)</span>
</span><span class='line'><span class="c1">#  %:z - hour and minute offset from UTC with a colon (e.g. +09:00)</span>
</span><span class='line'><span class="c1">#  output: 2012-11-28T06:29:36-05:00</span>
</span></code></pre></td></tr></table></div></figure>


<h3>strptime</h3>

<p>Parses the given representation of date and time with the given template, and creates a date object.</p>

<p><a href="http://apidock.com/ruby/DateTime/strptime/class">source link</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">format</span> <span class="o">=</span> <span class="s2">&quot;%m/%d/%Y %H:%M:%S&quot;</span>
</span><span class='line'><span class="n">date_time</span> <span class="o">=</span> <span class="s2">&quot;11/28/2012 16:39:11.642&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">date_obj</span> <span class="o">=</span> <span class="no">DateTime</span><span class="o">.</span><span class="n">strptime</span><span class="p">(</span><span class="n">date_time</span><span class="p">,</span> <span class="nb">format</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Any questions on this, please feel free to ask. We&#8217;re here to help&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Working with Digests and Signatures]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2012/11/28/working-on-digests-and-signatures/"/>
    <updated>2012-11-28T05:53:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2012/11/28/working-on-digests-and-signatures</id>
    <content type="html"><![CDATA[<h3>MD5 digests</h3>

<p>MD5 is a one-way hashing algorithm for creating digest &#8220;signatures&#8221; or checksums of strings. MD5 digests are 128 bit (16 byte) signatures. MD5 is the most common method of providing checksums for files downloaded over the internet.
To create a checksum of an entire file or text convert the whole string.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">digest</span> <span class="o">=</span> <span class="no">Digest</span><span class="o">::</span><span class="no">MD5</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">(</span><span class="n">string_to_digest</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://www.siaris.net/index.cgi/Programming/LanguageBits/Ruby/MD5.rdoc">source link</a></p>

<h3>hmac-sha1</h3>

<p>In cryptography, a hash-based message authentication code (HMAC) is a specific construction for calculating a message authentication code (MAC) involving a cryptographic hash function in combination with a secret cryptographic key. As with any MAC, it may be used to simultaneously verify both the data integrity and the authenticity of a message.</p>

<p><a href="http://en.wikipedia.org/wiki/Hash-based_message_authentication_code">source link</a></p>

<p>In ruby its simple to generate one:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">ruby</span><span class="o">-</span><span class="n">hmac</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">hmac_sha1</span> <span class="n">params</span><span class="o">=</span><span class="p">{}</span>
</span><span class='line'>  <span class="nb">require</span> <span class="s1">&#39;openssl&#39;</span>
</span><span class='line'>  <span class="n">secret_key</span> <span class="o">=</span> <span class="s1">&#39;No telling a secret&#39;</span>
</span><span class='line'>  <span class="no">OpenSSL</span><span class="o">::</span><span class="no">HMAC</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">(</span><span class="s1">&#39;sha1&#39;</span><span class="p">,</span> <span class="n">secret_key</span><span class="p">,</span> <span class="n">params</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Any questions on this, please feel free to ask. We&#8217;re here to help&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Applying Common Filtering for Rails Api Based Applications]]></title>
    <link href="http://Andrew-Ken.github.com/blog/2012/11/26/applying-common-filtering-for-rails-api-based-applications/"/>
    <updated>2012-11-26T22:50:00-05:00</updated>
    <id>http://Andrew-Ken.github.com/blog/2012/11/26/applying-common-filtering-for-rails-api-based-applications</id>
    <content type="html"><![CDATA[<p>Sometimes there are common sets of fields and id&#8217;s that we would like the api
to filter before sending the details to the client. It would be great if we can
place them in a common place so that they can be changed anytime.</p>

<p>File: lib/api_config.rb</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Filters out the specified list of fields from the API calls</span>
</span><span class='line'><span class="no">APIFILTERS</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;id&#39;</span><span class="p">,</span><span class="s1">&#39;password&#39;</span><span class="p">,</span><span class="s1">&#39;secret__internal_id&#39;</span><span class="p">,</span><span class="s1">&#39;updated_at&#39;</span><span class="p">,</span><span class="s1">&#39;created_at&#39;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>File: config/initializers/json_config.rb</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Requiring the api configuration file</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;api_config&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">as_json_with_filter</span><span class="p">(</span><span class="n">options</span><span class="o">=</span><span class="no">Hash</span><span class="o">.</span><span class="n">new</span><span class="p">)</span>
</span><span class='line'>    <span class="n">options</span><span class="o">[</span><span class="ss">:except</span><span class="o">]</span> <span class="o">=</span> <span class="no">APIFILTERS</span>
</span><span class='line'>    <span class="n">as_json_without_filter</span><span class="p">(</span><span class="n">options</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">alias_method_chain</span> <span class="ss">:as_json</span><span class="p">,</span> <span class="ss">:filter</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>the alias_method_chain does two things here:</p>

<ul>
<li><p>firstly it creates an alias method called as_json_without_filter to as_json</p></li>
<li><p>secondly it looks for as_json_with_filter and makes that as the new as_json
method</p></li>
</ul>


<p>The as_json method is one that gets called when the to_json method is called on a
model object or a collection of model objects in rails</p>

<p>example: users controller file</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">UsersController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">respond_to</span> <span class="ss">:json</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="n">respond_with</span> <span class="vi">@user</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>the above would call the as_json method of the user model, we have just
overridden the super class to filter out a few fields</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">as_json</span><span class="p">(</span><span class="n">options</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>  <span class="k">super</span><span class="p">(</span><span class="ss">:include</span> <span class="o">=&gt;</span> <span class="ss">:parents</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>for xml, this is slightly Different</p>

<p>File: config/initializers/xml_config.rb</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Requiring the api configuration file</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;api_config&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">alias_method</span> <span class="ss">:to_xml</span><span class="p">,</span> <span class="ss">:old_to_xml</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_xml</span><span class="p">(</span><span class="n">options</span><span class="o">=</span><span class="no">Hash</span><span class="o">.</span><span class="n">new</span><span class="p">)</span>
</span><span class='line'>    <span class="n">options</span><span class="o">[</span><span class="ss">:except</span><span class="o">]</span> <span class="o">=</span> <span class="no">APIFILTERS</span>
</span><span class='line'>    <span class="n">old_to_xml</span><span class="p">(</span><span class="n">options</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Any questions, please feel free to ask. We&#8217;re here to help&#8230;</p>
]]></content>
  </entry>
  
</feed>
